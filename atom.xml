<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生活不止眼前的代码</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hesstudio.cn/"/>
  <updated>2016-09-15T15:45:12.000Z</updated>
  <id>http://hesstudio.cn/</id>
  
  <author>
    <name>Robin He</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android Binder之Service Manager</title>
    <link href="http://hesstudio.cn/2016/09/15/android-binder-2/"/>
    <id>http://hesstudio.cn/2016/09/15/android-binder-2/</id>
    <published>2016-09-15T15:43:14.000Z</published>
    <updated>2016-09-15T15:45:12.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Binder" scheme="http://hesstudio.cn/tags/Binder/"/>
    
  </entry>
  
  <entry>
    <title>Android Binder之Binder Driver</title>
    <link href="http://hesstudio.cn/2016/09/06/android-binder-1/"/>
    <id>http://hesstudio.cn/2016/09/06/android-binder-1/</id>
    <published>2016-09-06T15:40:21.000Z</published>
    <updated>2016-09-15T15:45:08.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Binder" scheme="http://hesstudio.cn/tags/Binder/"/>
    
  </entry>
  
  <entry>
    <title>Android之Binder概述</title>
    <link href="http://hesstudio.cn/2016/08/29/android-binder-0/"/>
    <id>http://hesstudio.cn/2016/08/29/android-binder-0/</id>
    <published>2016-08-29T15:40:27.000Z</published>
    <updated>2016-10-01T09:49:13.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Binder简介&quot;&gt;&lt;a href=&quot;#Binder简介&quot; class=&quot;headerlink&quot; title=&quot;Binder简介&quot;&gt;&lt;/a&gt;Binder简介&lt;/h1&gt;&lt;p&gt;在Android系统中,应用程序由Acyiviy,Service,Broadcast Receiver,Content Provider四类组件构成,组件可以运行在一个进程中,也可运行在不同进程中,同时Android的各类系统服务也可运行在不同的进程中,运行在不同进程的应用程序组件及系统服务采用Binder来进行跨进程通信.&lt;/p&gt;
&lt;p&gt;Android是基于Linux内核开发,而在Linux系统中,传统的IPC机制有Pipe,ShareMemory,Singal,Message,Socket等,Android并未完全采用这些传统的进程间通信机制(Zygote采用了Socket,Init子进程退出采用了Singal),而是引入了Binder作为主要的IPC机制.&lt;/p&gt;
&lt;p&gt;Binder是在&lt;a href=&quot;http://www.angryredplanet.com/~hackbod/openbinder/docs/html/BinderIPCMechanism.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpebBinder&lt;/a&gt;的基础上实现的,OpenBinder是一个开源的系统IPC机制,最初是由 Be Inc开发，后来由Palm, Inc公司负责开发，Google对其改造后应用到了Android系统上.&lt;/p&gt;
&lt;p&gt;Binder相比其他的IPC机制有什么优势?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高效率.Binder中数据传输只需要一次拷贝(用户空间虚拟地址与内核空间虚拟地址映射到同一物理内存),节省时间的同时也节省了空间.&lt;/li&gt;
&lt;li&gt;面向对象的RPC调用,模糊了进程边界,淡化进程间通信过程.在Android的C++/java面向对象语言环境中,Binder更加符合面向对象思想,Binder的实体位于一个进程中,而引用却可以分布在各个进程中,通过Binder引用调用就像本地调用一样.这种通信方式更加适合Android组件化的思想.&lt;/li&gt;
&lt;li&gt;安全性.Android为每个安装的应用程序分配了自己的UID,Binder能依据调用进程的UID,PID来进行权限控制.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;Binder机制&quot;&gt;&lt;a href=&quot;#Binder机制&quot; class=&quot;headerlink&quot; title=&quot;Binder机制&quot;&gt;&lt;/a&gt;Binder机制&lt;/h1&gt;&lt;p&gt;Binder采用的是CS通信方式，对于提供服务的进程即server进程，请求服务的进程即client进程.同一个server进程可能存在多个service组件，同时同一个clent进程可以请求多个service组件.&lt;br&gt;如下图所示，Binder的通信涉及到4个角色，分别是Client，Service，Service Mananger与Binder Driver.&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/android/Binder-model.jpg?raw=true&quot; alt=&quot;&quot;&gt;&lt;br&gt;Client,Service,Service Mananger都运行在用户空间中，由于用户进程地址空间是独立且不能相互访问的，而内核空间是全局共享的，所以Client，Service，Service Mananger通过SystemCall(open,mmap,ioctl)来访问/dev/binder间接执行用户空间进程间的通信.&lt;/p&gt;
&lt;h1 id=&quot;Binder分析&quot;&gt;&lt;a href=&quot;#Binder分析&quot; class=&quot;headerlink&quot; title=&quot;Binder分析&quot;&gt;&lt;/a&gt;Binder分析&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Binder简介&quot;&gt;&lt;a href=&quot;#Binder简介&quot; class=&quot;headerlink&quot; title=&quot;Binder简介&quot;&gt;&lt;/a&gt;Binder简介&lt;/h1&gt;&lt;p&gt;在Android系统中,应用程序由Acyiviy,Service,Broadcast Rec
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Binder" scheme="http://hesstudio.cn/tags/Binder/"/>
    
  </entry>
  
  <entry>
    <title>Android之Init</title>
    <link href="http://hesstudio.cn/2016/08/22/android-init/"/>
    <id>http://hesstudio.cn/2016/08/22/android-init/</id>
    <published>2016-08-22T07:21:31.000Z</published>
    <updated>2016-09-15T15:45:04.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Init进程是Kernel启动后在用户空间创建的第一个用户级进程,它的pid为1.其他所有的进程都是由其直接或间接fork产生的.&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/android/boot-flow.jpg?raw=true&quot; alt=&quot;Android系统启动&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;Init调用如下图示,从汇编kernel/arch/arm/kernel/head-common.S &lt;code&gt;b    start_kernel&lt;/code&gt;进入到C环境kernel/init/main.c &lt;code&gt;start_kernel&lt;/code&gt;执行.最后在run_init_process()中通过do_execve创建Init进程.&lt;br&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/android/android_init_flow.jpg?raw=true&quot; alt=&quot;Kernel init flow&quot;&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;kernel_init()中的execute_command即/init，run_init_process中通过execve()系统调用来启动init进程。如果没有定义execute_command，则在/sbin，/etc，/bin查找，否则Kernel Panic.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static int __ref kernel_init(void *unused)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (execute_command) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ret = run_init_process(execute_command);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pr_err(&amp;quot;Failed to execute %s (error %d).  Attempting defaults...\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      execute_command, ret);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (!try_to_run_init_process(&amp;quot;/sbin/init&amp;quot;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    !try_to_run_init_process(&amp;quot;/etc/init&amp;quot;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    !try_to_run_init_process(&amp;quot;/bin/init&amp;quot;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    !try_to_run_init_process(&amp;quot;/bin/sh&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	panic(&amp;quot;No working init found.  Try passing init= option to kernel. &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      &amp;quot;See Linux Documentation/init.txt for guidance.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Android中的Init进程与Linux中有所不同,它主要实现以下的四大功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析执行init.rc文件&lt;/li&gt;
&lt;li&gt;创建设备节点&lt;/li&gt;
&lt;li&gt;创建关键的daemon进程并处理子进程的终止&lt;/li&gt;
&lt;li&gt;属性服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;执行流程&quot;&gt;&lt;a href=&quot;#执行流程&quot; class=&quot;headerlink&quot; title=&quot;执行流程&quot;&gt;&lt;/a&gt;执行流程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Init的源码主要集中在system/core/init/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面从init.cpp的main()开始逐段来分析init进程的执行流程:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (!strcmp(basename(argv[0]), &amp;quot;ueventd&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ueventd_main(argc, argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (!strcmp(basename(argv[0]), &amp;quot;watchdogd&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return watchdogd_main(argc, argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Clear the umask.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;umask(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_environment(&amp;quot;PATH&amp;quot;, _PATH_DEFPATH);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool is_first_stage = (argc == 1) || (strcmp(argv[1], &amp;quot;--second-stage&amp;quot;) != 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Get the basic filesystem setup we need put together in the initramdisk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// on / and then we&amp;apos;ll let the rc file figure out the rest.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (is_first_stage) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mount(&amp;quot;tmpfs&amp;quot;, &amp;quot;/dev&amp;quot;, &amp;quot;tmpfs&amp;quot;, MS_NOSUID, &amp;quot;mode=0755&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mkdir(&amp;quot;/dev/pts&amp;quot;, 0755);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mkdir(&amp;quot;/dev/socket&amp;quot;, 0755);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mount(&amp;quot;devpts&amp;quot;, &amp;quot;/dev/pts&amp;quot;, &amp;quot;devpts&amp;quot;, 0, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #define MAKE_STR(x) __STRING(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mount(&amp;quot;proc&amp;quot;, &amp;quot;/proc&amp;quot;, &amp;quot;proc&amp;quot;, 0, &amp;quot;hidepid=2,gid=&amp;quot; MAKE_STR(AID_READPROC));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mount(&amp;quot;sysfs&amp;quot;, &amp;quot;/sys&amp;quot;, &amp;quot;sysfs&amp;quot;, 0, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先根据init的执行参数basename(argv[0])判断是否是执行ueventd或watchdogd(ueventd与watchdogd功能在init中实现),通过system/core/init/Android.mk可以知道,/sbin/ueventd与/sbin/watchdogd实际上都链接到init.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Create symlinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_POST_INSTALL_CMD := $(hide) mkdir -p $(TARGET_ROOT_OUT)/sbin; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ln -sf ../init $(TARGET_ROOT_OUT)/sbin/ueventd; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ln -sf ../init $(TARGET_ROOT_OUT)/sbin/watchdogd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;umask(0) 即设置创建文件的属性默认为0777.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;is_first_stage是用来判断init是在内核空间还是在用户空间启动,is_first_stage为true意味着init是运行在kernel domain.因为selinux的相关设置需要在内核空间下.&lt;/li&gt;
&lt;li&gt;如果是在内核启动,创建/dev，/proc，/sys目录并mount相应的虚拟内存文件系统&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// We must have some place other than / to create the device nodes for&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// kmsg and null, otherwise we won&amp;apos;t be able to remount / read-only&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// later on. Now that tmpfs is mounted on /dev, we can actually talk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// to the outside world.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;open_devnull_stdio();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;klog_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;klog_set_level(KLOG_NOTICE_LEVEL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NOTICE(&amp;quot;init %s started!\n&amp;quot;, is_first_stage ? &amp;quot;first stage&amp;quot; : &amp;quot;second stage&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;open_devnull_stdio();屏蔽标准输入/输出/错误,即标准输入输出都无法输出信息，如下代码所示,创建/dev/&lt;strong&gt;null&lt;/strong&gt;并通过dup2()复制文件描述符，重定向stdin,stdout,stderr到/dev/__null__上.(一般daemon进程都会有类似的重定位操作)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void open_devnull_stdio(void)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Try to avoid the mknod() call if we can. Since SELinux makes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // a /dev/null replacement available for free, let&amp;apos;s use it.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int fd = open(&amp;quot;/sys/fs/selinux/null&amp;quot;, O_RDWR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (fd == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // OOPS, /sys/fs/selinux/null isn&amp;apos;t available, likely because&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // /sys/fs/selinux isn&amp;apos;t mounted. Fall back to mknod.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        static const char *name = &amp;quot;/dev/__null__&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mknod(name, S_IFCHR | 0600, (1 &amp;lt;&amp;lt; 8) | 3) == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fd = open(name, O_RDWR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            unlink(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (fd == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            exit(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dup2(fd, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dup2(fd, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dup2(fd, 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (fd &amp;gt; 2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;klog_init,创建kmsg设备节点,printk打印的log可以通过cat /proc/kmsg或者dmesg输出.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void klog_init(void) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (klog_fd &amp;gt;= 0) return; /* Already initialized */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    klog_fd = open(&amp;quot;/dev/kmsg&amp;quot;, O_WRONLY | O_CLOEXEC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (klog_fd &amp;gt;= 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static const char* name = &amp;quot;/dev/__kmsg__&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mknod(name, S_IFCHR | 0600, (1 &amp;lt;&amp;lt; 8) | 11) == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        klog_fd = open(name, O_WRONLY | O_CLOEXEC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unlink(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;klog_set_level设置log等级&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (!is_first_stage) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Indicate that booting is in progress to background fw loaders, etc.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    close(open(&amp;quot;/dev/.booting&amp;quot;, O_WRONLY | O_CREAT | O_CLOEXEC, 0000));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    property_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // If arguments are passed both on the command line and in DT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // properties set in DT always have priority over the command-line ones.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_kernel_dt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_kernel_cmdline();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Propagate the kernel variables to internal variables&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // used by init as well as the current required properties.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    export_kernel_boot_props();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建/dev/.booting，用来标志是否处于初始化过程中.如下init.rc代码片段所示，在late-init阶段，将触发firmware_mounts_complete，删除掉/dev/.booting&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Indicate to fw loaders that the relevant mounts are up.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;on firmware_mounts_complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rm /dev/.booting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Mount filesystems and start core system services.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;on late-init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Remove a file to wake up anything waiting for firmware.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    trigger firmware_mounts_complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调用property_init()初始化属性系统，后面详细描述.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调用process_kernel_dt()处理device tree.读取/proc/device-tree/firmware/android/compatible，判断内容是否为”android,firmware”,然后根据路径下文件名与文件内容分别设置ro.boot.android,ro.boot.firmware二个属性.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void process_kernel_dt() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static const char android_dir[] = &amp;quot;/proc/device-tree/firmware/android&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::string file_name = android::base::StringPrintf(&amp;quot;%s/compatible&amp;quot;, android_dir);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::string dt_file;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android::base::ReadFileToString(file_name, &amp;amp;dt_file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!dt_file.compare(&amp;quot;android,firmware&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;firmware/android is not compatible with &amp;apos;android,firmware&amp;apos;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::unique_ptr&amp;lt;DIR, int(*)(DIR*)&amp;gt;dir(opendir(android_dir), closedir);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!dir) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct dirent *dp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while ((dp = readdir(dir.get())) != NULL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (dp-&amp;gt;d_type != DT_REG || !strcmp(dp-&amp;gt;d_name, &amp;quot;compatible&amp;quot;) || !strcmp(dp-&amp;gt;d_name, &amp;quot;name&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        file_name = android::base::StringPrintf(&amp;quot;%s/%s&amp;quot;, android_dir, dp-&amp;gt;d_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android::base::ReadFileToString(file_name, &amp;amp;dt_file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        std::replace(dt_file.begin(), dt_file.end(), &amp;apos;,&amp;apos;, &amp;apos;.&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        std::string property_name = android::base::StringPrintf(&amp;quot;ro.boot.%s&amp;quot;, dp-&amp;gt;d_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        property_set(property_name.c_str(), dt_file.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调用process_kernel_cmdline()读取/proc/cmdline文件,并设置cmdline文件中以androidboot.开头命令的对应ro.boot.开头的属性值.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void process_kernel_cmdline() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Don&amp;apos;t expose the raw commandline to unprivileged processes.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chmod(&amp;quot;/proc/cmdline&amp;quot;, 0440);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // The first pass does the common stuff, and finds if we are in qemu.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // The second pass is only necessary for qemu to export all kernel params&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // as properties.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    import_kernel_cmdline(false, import_kernel_nv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (qemu[0]) import_kernel_cmdline(true, import_kernel_nv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static void import_kernel_nv(const std::string&amp;amp; key, const std::string&amp;amp; value, bool for_emulator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (key.empty()) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (for_emulator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // In the emulator, export any kernel option with the &amp;quot;ro.kernel.&amp;quot; prefix.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        property_set(android::base::StringPrintf(&amp;quot;ro.kernel.%s&amp;quot;, key.c_str()).c_str(), value.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (key == &amp;quot;qemu&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        strlcpy(qemu, value.c_str(), sizeof(qemu));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else if (android::base::StartsWith(key, &amp;quot;androidboot.&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        property_set(android::base::StringPrintf(&amp;quot;ro.boot.%s&amp;quot;, key.c_str() + 12).c_str(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     value.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调用export_kernel_boot_props设置boot相关的属性.即根据设置prop_map中src_prop设置dst_prop的值.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void export_kernel_boot_props() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *src_prop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *dst_prop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *default_value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; prop_map[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &amp;quot;ro.boot.serialno&amp;quot;,   &amp;quot;ro.serialno&amp;quot;,   &amp;quot;&amp;quot;, &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &amp;quot;ro.boot.mode&amp;quot;,       &amp;quot;ro.bootmode&amp;quot;,   &amp;quot;unknown&amp;quot;, &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &amp;quot;ro.boot.baseband&amp;quot;,   &amp;quot;ro.baseband&amp;quot;,   &amp;quot;unknown&amp;quot;, &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &amp;quot;ro.boot.bootloader&amp;quot;, &amp;quot;ro.bootloader&amp;quot;, &amp;quot;unknown&amp;quot;, &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &amp;quot;ro.boot.hardware&amp;quot;,   &amp;quot;ro.hardware&amp;quot;,   &amp;quot;unknown&amp;quot;, &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &amp;quot;ro.boot.revision&amp;quot;,   &amp;quot;ro.revision&amp;quot;,   &amp;quot;0&amp;quot;, &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (size_t i = 0; i &amp;lt; ARRAY_SIZE(prop_map); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        std::string value = property_get(prop_map[i].src_prop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        property_set(prop_map[i].dst_prop, (!value.empty()) ? value.c_str() : prop_map[i].default_value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;selinux_initialize(is_first_stage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// If we&amp;apos;re in the kernel domain, re-exec init to transition to the init domain now&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// that the SELinux policy has been loaded.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (is_first_stage) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (restorecon(&amp;quot;/init&amp;quot;) == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;restorecon failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        security_failure();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char* path = argv[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char* args[] = &amp;#123; path, const_cast&amp;lt;char*&amp;gt;(&amp;quot;--second-stage&amp;quot;), nullptr &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (execv(path, args) == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;execv(\&amp;quot;%s\&amp;quot;) failed: %s\n&amp;quot;, path, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        security_failure();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// These directories were necessarily created before initial policy load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// and therefore need their security context restored to the proper value.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// This must happen before /dev is populated by ueventd.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NOTICE(&amp;quot;Running restorecon...\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restorecon(&amp;quot;/dev&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restorecon(&amp;quot;/dev/socket&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restorecon(&amp;quot;/dev/__properties__&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restorecon(&amp;quot;/property_contexts&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restorecon_recursive(&amp;quot;/sys&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行在kernel domain时,通过selinux_initialize对selinux进行初始化.&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;epoll_fd = epoll_create1(EPOLL_CLOEXEC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (epoll_fd == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ERROR(&amp;quot;epoll_create1 failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exit(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;signal_handler_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;property_load_boot_defaults();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export_oem_lock_status();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start_property_service();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;epoll_create1创建epoll事件&lt;/li&gt;
&lt;li&gt;signal_handler_init();子进程信号处理,后面单独分析&lt;/li&gt;
&lt;li&gt;初始化default属性并启动服务系统,后面单独分析&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const BuiltinFunctionMap function_map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Action::set_function_map(&amp;amp;function_map);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Parser&amp;amp; parser = Parser::GetInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parser.AddSectionParser(&amp;quot;service&amp;quot;,std::make_unique&amp;lt;ServiceParser&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parser.AddSectionParser(&amp;quot;on&amp;quot;, std::make_unique&amp;lt;ActionParser&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parser.AddSectionParser(&amp;quot;import&amp;quot;, std::make_unique&amp;lt;ImportParser&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parser.ParseConfig(&amp;quot;/init.rc&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ActionManager&amp;amp; am = ActionManager::GetInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueEventTrigger(&amp;quot;early-init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Queue an action that waits for coldboot done so we know ueventd has set up all of /dev...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(wait_for_coldboot_done_action, &amp;quot;wait_for_coldboot_done&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ... so that we can start queuing up actions that require stuff from /dev.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(mix_hwrng_into_linux_rng_action, &amp;quot;mix_hwrng_into_linux_rng&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(set_mmap_rnd_bits_action, &amp;quot;set_mmap_rnd_bits&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(keychord_init_action, &amp;quot;keychord_init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(console_init_action, &amp;quot;console_init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Trigger all the boot actions to get us started.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueEventTrigger(&amp;quot;init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Repeat mix_hwrng_into_linux_rng in case /dev/hw_random or /dev/random&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// wasn&amp;apos;t ready immediately after wait_for_coldboot_done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(mix_hwrng_into_linux_rng_action, &amp;quot;mix_hwrng_into_linux_rng&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Don&amp;apos;t mount filesystems or start core system services in charger mode.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;std::string bootmode = property_get(&amp;quot;ro.bootmode&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (bootmode == &amp;quot;charger&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    am.QueueEventTrigger(&amp;quot;charger&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    am.QueueEventTrigger(&amp;quot;late-init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Run all property triggers based on current state of the properties.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;am.QueueBuiltinAction(queue_property_triggers_action, &amp;quot;queue_property_triggers&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;init-rc脚本分析&quot;&gt;&lt;a href=&quot;#init-rc脚本分析&quot; class=&quot;headerlink&quot; title=&quot;init.rc脚本分析&quot;&gt;&lt;/a&gt;init.rc脚本分析&lt;/h1&gt;&lt;h1 id=&quot;子进程信号处理&quot;&gt;&lt;a href=&quot;#子进程信号处理&quot; class=&quot;headerlink&quot; title=&quot;子进程信号处理&quot;&gt;&lt;/a&gt;子进程信号处理&lt;/h1&gt;&lt;p&gt;由于Init进程是系统的1号进程,其他用户进程都是由其直接或间接生成,所以init进程的作用之一就是子进程退出信号的处理.子进程exit退出时会向父进程发出SIGCHLD信号,父进程收到该信号就可以处理子进程的退出从而防止子进程变成僵尸进程.下面从signal_handler_init()分析Init对子进程退出的处理.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void signal_handler_init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Create a signalling mechanism for SIGCHLD.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int s[2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (socketpair(AF_UNIX, SOCK_STREAM | SOCK_NONBLOCK | SOCK_CLOEXEC, 0, s) == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;socketpair failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        exit(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    signal_write_fd = s[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    signal_read_fd = s[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Write to signal_write_fd if we catch SIGCHLD.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct sigaction act;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    memset(&amp;amp;act, 0, sizeof(act));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    act.sa_handler = SIGCHLD_handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    act.sa_flags = SA_NOCLDSTOP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sigaction(SIGCHLD, &amp;amp;act, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServiceManager::GetInstance().ReapAnyOutstandingChildren();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    register_epoll_handler(signal_read_fd, handle_signal);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为了同时能同时处理多个信号,通过socket来通信,socketpair创建一对已连接的本地socket&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sigaction注册SIGCHLD信号的处理函数SIGCHLD_handler(SA_NOCLDSTOP标志只有当子进程结束才接收SIGCHLD信号),即收到SIGCHLD信号后往signal_write_fd中写入”1”,触发signal_read_fd上的epoll事件处理handle_signal&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void SIGCHLD_handler(int) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (TEMP_FAILURE_RETRY(write(signal_write_fd, &amp;quot;1&amp;quot;, 1)) == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;write(signal_write_fd) failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ReapAnyOutstandingChildren()处理子进程的退出,下面具体分析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;register_epoll_handler注册signal_read_fd到epoll_fd上，并关联EPOLLIN读事件&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void register_epoll_handler(int fd, void (*fn)()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    epoll_event ev;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ev.events = EPOLLIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ev.data.ptr = reinterpret_cast&amp;lt;void*&amp;gt;(fn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (epoll_ctl(epoll_fd, EPOLL_CTL_ADD, fd, &amp;amp;ev) == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;epoll_ctl failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static void handle_signal() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Clear outstanding requests.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char buf[32];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    read(signal_read_fd, buf, sizeof(buf));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServiceManager::GetInstance().ReapAnyOutstandingChildren();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;handle_signal最后通过ServiceManager的ReapAnyOutstandingChildren()来处理子进程的退出.下面具体分析ReapAnyOutstandingChildren&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ServiceManager::ReapAnyOutstandingChildren() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (ReapOneProcess()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool ServiceManager::ReapOneProcess() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pid_t pid = TEMP_FAILURE_RETRY(waitpid(-1, &amp;amp;status, WNOHANG));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (pid == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else if (pid == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;waitpid failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Service* svc = FindServiceByPid(pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::string name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (svc) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = android::base::StringPrintf(&amp;quot;Service &amp;apos;%s&amp;apos; (pid %d)&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                           svc-&amp;gt;name().c_str(), pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = android::base::StringPrintf(&amp;quot;Untracked pid %d&amp;quot;, pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (WIFEXITED(status)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NOTICE(&amp;quot;%s exited with status %d\n&amp;quot;, name.c_str(), WEXITSTATUS(status));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else if (WIFSIGNALED(status)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NOTICE(&amp;quot;%s killed by signal %d\n&amp;quot;, name.c_str(), WTERMSIG(status));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else if (WIFSTOPPED(status)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NOTICE(&amp;quot;%s stopped by signal %d\n&amp;quot;, name.c_str(), WSTOPSIG(status));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NOTICE(&amp;quot;%s state changed&amp;quot;, name.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!svc) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (svc-&amp;gt;Reap()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        waiting_for_exec = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RemoveService(*svc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;while循环中调用ReapOneProcess处理&lt;/li&gt;
&lt;li&gt;waitpid()等待死亡子进程退出结束(WNOHANG标志没有子进程死亡立即返回)，获取子进程结束信息并清除zombie&lt;/li&gt;
&lt;li&gt;对于一般子进程,waitpid后处理结束.但如果退出的是服务进程的话,那么会通过svc-&amp;gt;Reap()对其进一步处理&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool Service::Reap() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if (!(flags_ &amp;amp; SVC_ONESHOT) || (flags_ &amp;amp; SVC_RESTART)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NOTICE(&amp;quot;Service &amp;apos;%s&amp;apos; (pid %d) killing any children in process group\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              name_.c_str(), pid_);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        kill(-pid_, SIGKILL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Remove any sockets we may have created.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (const auto&amp;amp; si : sockets_) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        std::string tmp = StringPrintf(ANDROID_SOCKET_DIR &amp;quot;/%s&amp;quot;, si.name.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unlink(tmp.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (flags_ &amp;amp; SVC_EXEC) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        INFO(&amp;quot;SVC_EXEC pid %d finished...\n&amp;quot;, pid_);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pid_ = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flags_ &amp;amp;= (~SVC_RUNNING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Oneshot processes go into the disabled state on exit,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // except when manually restarted.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ((flags_ &amp;amp; SVC_ONESHOT) &amp;amp;&amp;amp; !(flags_ &amp;amp; SVC_RESTART)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flags_ |= SVC_DISABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Disabled and reset processes do not get restarted automatically.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (flags_ &amp;amp; (SVC_DISABLED | SVC_RESET))  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NotifyStateChange(&amp;quot;stopped&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time_t now = gettime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ((flags_ &amp;amp; SVC_CRITICAL) &amp;amp;&amp;amp; !(flags_ &amp;amp; SVC_RESTART)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (time_crashed_ + CRITICAL_CRASH_WINDOW &amp;gt;= now) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (++nr_crashed_ &amp;gt; CRITICAL_CRASH_THRESHOLD) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ERROR(&amp;quot;critical process &amp;apos;%s&amp;apos; exited %d times in %d minutes; &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &amp;quot;rebooting into recovery mode\n&amp;quot;, name_.c_str(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      CRITICAL_CRASH_THRESHOLD, CRITICAL_CRASH_WINDOW / 60);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                android_reboot(ANDROID_RB_RESTART2, 0, &amp;quot;recovery&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time_crashed_ = now;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nr_crashed_ = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flags_ &amp;amp;= (~SVC_RESTART);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flags_ |= SVC_RESTARTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Execute all onrestart commands for this service.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onrestart_.ExecuteAllCommands();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NotifyStateChange(&amp;quot;restarting&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Reap()中主要是对service进程的flag进行分析,来判断是否需要重启该service进程,定义了SVC_ONESHOT的服务进程不会重启,状态改为stopped.定义了SVC_CRITICAL与SVC_RESTART的关键服务如果重启超过4次,系统将reboot到recovery.服务进程在重启前将移除其创建的socket(/dev/socket/),杀死其所有子进程,并通过NotifyStateChange改变其状态为restarting(即设置init.svc.属性状态),并执行initrc中该服务定义的onrestart命令.&lt;/p&gt;
&lt;h1 id=&quot;属性服务&quot;&gt;&lt;a href=&quot;#属性服务&quot; class=&quot;headerlink&quot; title=&quot;属性服务&quot;&gt;&lt;/a&gt;属性服务&lt;/h1&gt;&lt;p&gt;Android的属性是以字符串键值形式保存的系统的关键值(可通过adb shell getprop打印所有的prop),在Android系统中，很多系统模块/应用的功能都是通过属性来控制的,非常关键,属性服务也是在Init中处理.&lt;br&gt;下面从void property_init开始分析属性服务&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void property_init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (__system_property_area_init()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;Failed to initialize property area\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        exit(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int __system_property_area_init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return map_prop_area_rw();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static int map_prop_area_rw()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* dev is a tmpfs that we can use to carve a shared workspace&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * out of, so let&amp;apos;s do that...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const int fd = open(property_filename,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        O_RDWR | O_CREAT | O_NOFOLLOW | O_CLOEXEC | O_EXCL, 0444);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (fd &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (errno == EACCES) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            /* for consistency with the case where the process has already&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             * mapped the page in and segfaults when trying to write to it&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abort();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (ftruncate(fd, PA_SIZE) &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pa_size = PA_SIZE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pa_data_size = pa_size - sizeof(prop_area);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compat_mode = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void *const memory_area = mmap(NULL, pa_size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (memory_area == MAP_FAILED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prop_area *pa = new(memory_area) prop_area(PROP_AREA_MAGIC, PROP_AREA_VERSION);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* plug into the lib property services */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __system_property_area__ = pa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;property_init主要是分配一块共享的内存区域(/dev/&lt;strong&gt;properties&lt;/strong&gt;)存储属性值 //TODO&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bionic/libc/include/sys/_system_properties.h:90:#define PROP_PATH_RAMDISK_DEFAULT  &amp;quot;/default.prop&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;property_load_boot_defaults();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;读取/default.prop文件,初始化属性系统值,接下来start_property_service()启动属性服务&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void start_property_service() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    property_set_fd = create_socket(PROP_SERVICE_NAME, SOCK_STREAM | SOCK_CLOEXEC | SOCK_NONBLOCK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    0666, 0, 0, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (property_set_fd == -1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;start_property_service socket creation failed: %s\n&amp;quot;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        exit(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen(property_set_fd, 8);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    register_epoll_handler(property_set_fd, handle_property_set_fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;start_property_service中创建并监听等待服务的socket.并加入到epoll中,最终属性设置请求将在handle_property_set_fd中来处理&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void handle_property_set_fd()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prop_msg msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct ucred cr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct sockaddr_un addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    socklen_t addr_size = sizeof(addr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    socklen_t cr_size = sizeof(cr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char * source_ctx = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct pollfd ufds[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const int timeout_ms = 2 * 1000;  /* Default 2 sec timeout for caller to send property. */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ((s = accept(property_set_fd, (struct sockaddr *) &amp;amp;addr, &amp;amp;addr_size)) &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* Check socket options here */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (getsockopt(s, SOL_SOCKET, SO_PEERCRED, &amp;amp;cr, &amp;amp;cr_size) &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;Unable to receive socket options\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ufds[0].fd = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ufds[0].events = POLLIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ufds[0].revents = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nr = TEMP_FAILURE_RETRY(poll(ufds, 1, timeout_ms));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (nr == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;sys_prop: timeout waiting for uid=%d to send property message.\n&amp;quot;, cr.uid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else if (nr &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;sys_prop: error waiting for uid=%d to send property message: %s\n&amp;quot;, cr.uid, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = TEMP_FAILURE_RETRY(recv(s, &amp;amp;msg, sizeof(msg), MSG_DONTWAIT));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(r != sizeof(prop_msg)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ERROR(&amp;quot;sys_prop: mis-match msg size received: %d expected: %zu: %s\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              r, sizeof(prop_msg), strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    switch(msg.cmd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case PROP_MSG_SETPROP:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.name[PROP_NAME_MAX-1] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.value[PROP_VALUE_MAX-1] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!is_legal_property_name(msg.name, strlen(msg.name))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ERROR(&amp;quot;sys_prop: illegal property name. Got: \&amp;quot;%s\&amp;quot;\n&amp;quot;, msg.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getpeercon(s, &amp;amp;source_ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(memcmp(msg.name,&amp;quot;ctl.&amp;quot;,4) == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Keep the old close-socket-early behavior when handling&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // ctl.* properties.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (check_control_mac_perms(msg.value, source_ctx, &amp;amp;cr)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handle_control_message((char*) msg.name + 4, (char*) msg.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ERROR(&amp;quot;sys_prop: Unable to %s service ctl [%s] uid:%d gid:%d pid:%d\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg.name + 4, msg.value, cr.uid, cr.gid, cr.pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (check_mac_perms(msg.name, source_ctx, &amp;amp;cr)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                property_set((char*) msg.name, (char*) msg.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ERROR(&amp;quot;sys_prop: permission denied uid:%d  name:%s\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      cr.uid, msg.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Note: bionic&amp;apos;s property client code assumes that the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // property server will not close the socket until *AFTER*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // the property is written to memory.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        freecon(source_ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Init进程是Kernel启动后在用户空间创建的第一个用户级进程,它的pid为1.其他所有的进程都是由其直接或间接fork产生的.&lt;/p&gt;

    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Init" scheme="http://hesstudio.cn/tags/Init/"/>
    
  </entry>
  
  <entry>
    <title>Android之Init.rc语法</title>
    <link href="http://hesstudio.cn/2016/08/20/android-init-language/"/>
    <id>http://hesstudio.cn/2016/08/20/android-init-language/</id>
    <published>2016-08-20T07:30:14.000Z</published>
    <updated>2016-08-28T07:26:46.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;译自system/core/init/readme.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Android-init-rc语法&quot;&gt;&lt;a href=&quot;#Android-init-rc语法&quot; class=&quot;headerlink&quot; title=&quot;Android init.rc语法&quot;&gt;&lt;/a&gt;Android init.rc语法&lt;/h1&gt;&lt;p&gt;Android init.rc包含四种类型的声明，分别是&lt;strong&gt;Actions&lt;/strong&gt;，&lt;strong&gt;Commands&lt;/strong&gt;，&lt;strong&gt;Services&lt;/strong&gt;，和&lt;strong&gt;Options&lt;/strong&gt;。&lt;br&gt;其语法规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;init.rc所有的语句都是以行为单位，行间使用空格分隔符号，类似C语言，使用”\”续行，并且以”#”开头进行行注释。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Actions和Services默认声明了一个新的section，所有该section下的command与options都属于它，在section前申明的command和options将会被其忽略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Actions与Services的命名是唯一的,后面的重复定义被视为无效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Actions&quot;&gt;&lt;a href=&quot;#Actions&quot; class=&quot;headerlink&quot; title=&quot;Actions&quot;&gt;&lt;/a&gt;Actions&lt;/h2&gt;&lt;p&gt;Action由一系列命令组成,通过trigger来决定什么时候执行,”on”后面跟的字符串即为ation的trigger.当trigger事件发生时，如果action不在to-be-executed中，将被加入到to-be-executed的队尾等待执行。&lt;/p&gt;
&lt;p&gt;在to-be-executed队列中的每个action按FIFO顺序执行，同样action中的command也是按定义的先后顺序依次执行。init除了执行action的command，还负责设备节点的创建及销毁，属性设置，进程重启等工作。&lt;/p&gt;
&lt;p&gt;Actions的格式如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;on &amp;lt;trigger&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Services&quot;&gt;&lt;a href=&quot;#Services&quot; class=&quot;headerlink&quot; title=&quot;Services&quot;&gt;&lt;/a&gt;Services&lt;/h2&gt;&lt;p&gt;Services由init启动并且可以在退出时重启(可选)，Services的格式如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;service &amp;lt;name&amp;gt; &amp;lt;pathname&amp;gt; [ &amp;lt;argument&amp;gt; ]*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Options&quot;&gt;&lt;a href=&quot;#Options&quot; class=&quot;headerlink&quot; title=&quot;Options&quot;&gt;&lt;/a&gt;Options&lt;/h2&gt;&lt;p&gt;Options用来描述Services，它决定service的执行行为.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;critical&lt;br&gt;表示关键的service，如果service4分钟内异常退出4次将会重启进入recovery模式。&lt;/li&gt;
&lt;li&gt;disabled&lt;br&gt;指定disable的service，不会随class service启动，只有通过&lt;code&gt;start service_name&lt;/code&gt;启动时才能启动&lt;/li&gt;
&lt;li&gt;setenv &amp;lt;&amp;lt;name&amp;gt; &amp;lt;value&amp;gt;&lt;br&gt;service启动时设置环境变量值&lt;/li&gt;
&lt;li&gt;socket &amp;lt;name&amp;gt; &amp;lt;type&amp;gt; &amp;lt;perm&amp;gt; [ &amp;lt;user&amp;gt; [ &amp;lt;group&amp;gt; [ &amp;lt;seclabel&amp;gt; ] ] ]&lt;br&gt;为要启动的进程创建名为/dev/socket/&amp;lt;name&amp;gt;的socket,&amp;lt;type&amp;gt;可选”dgram”或”stream”,&amp;lt;user&amp;gt; [ &amp;lt;group&amp;gt;默认为0.&lt;/li&gt;
&lt;li&gt;user &amp;lt;username&amp;gt;&lt;br&gt;在service启动时为其设置user，默认为root&lt;/li&gt;
&lt;li&gt;group &amp;lt;groupname&amp;gt; [ &amp;lt;groupname&amp;gt; ]*&lt;br&gt;在service启动时为其设置group，默认为root&lt;/li&gt;
&lt;li&gt;seclabel &amp;lt;seclabel&amp;gt;&lt;br&gt;SELinux security context&lt;/li&gt;
&lt;li&gt;oneshot&lt;br&gt;定义oneshot的service，退出后不再重启&lt;/li&gt;
&lt;li&gt;class &amp;lt;name&amp;gt;&lt;br&gt;为服务指定所属class，属于同一class的服务可以同时启动或停止.默认为default&lt;/li&gt;
&lt;li&gt;onrestart&lt;br&gt;服务重启时,执行一条命令&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Triggers&quot;&gt;&lt;a href=&quot;#Triggers&quot; class=&quot;headerlink&quot; title=&quot;Triggers&quot;&gt;&lt;/a&gt;Triggers&lt;/h2&gt;&lt;p&gt;Triggers是on后面的字符串，匹配某类事件的发生来执行action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;boot&lt;br&gt;init执行后触发的第一个trigger.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&lt;br&gt;设置属性值时触发Trigger&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Commands&quot;&gt;&lt;a href=&quot;#Commands&quot; class=&quot;headerlink&quot; title=&quot;Commands&quot;&gt;&lt;/a&gt;Commands&lt;/h2&gt;&lt;p&gt;Commands即Action或services onrestart中所执行的命令,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;bootchart_init&lt;br&gt; 启动bootcharting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;chmod &amp;lt;octal-mode&amp;gt; &amp;lt;path&amp;gt;&lt;br&gt;chmod权限&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;chown &amp;lt;owner&amp;gt; &amp;lt;group&amp;gt; &amp;lt;path&amp;gt;&lt;br&gt; chown用户/组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;class_start &amp;lt;serviceclass&amp;gt;&lt;br&gt;启动serviceclass下所有未启动的服务服务,disable的除外&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;class_stop &amp;lt;serviceclass&amp;gt;&lt;br&gt;停止serviceclass下所有已启动的服务服务,disable的除外&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;class_reset &amp;lt;serviceclass&amp;gt;&lt;br&gt; Stop all services of the specified class if they are&lt;br&gt; currently running, without disabling them. They can be restarted&lt;br&gt; later using class_start.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;copy &amp;lt;src&amp;gt; &amp;lt;dst&amp;gt;&lt;br&gt; copy操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;domainname &amp;lt;name&amp;gt;&lt;br&gt; 设置domain name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;enable &amp;lt;servicename&amp;gt;&lt;br&gt;enable服务，该服务可以随class service启动或停止&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;exec [ &amp;lt;seclabel&amp;gt; [&amp;lt;user&amp;gt; [ &amp;lt;group&amp;gt; ]&lt;em&gt; ] ] – &amp;lt;command&amp;gt; [ &amp;lt;argument&amp;gt; ]&lt;/em&gt;&lt;br&gt;fork并执行command，将阻塞init直到执行完毕&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;export &amp;lt;name&amp;gt; &amp;lt;value&amp;gt;&lt;br&gt;export环境变量值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hostname &amp;lt;name&amp;gt;&lt;br&gt; 设置hostname.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ifup &amp;lt;interface&amp;gt;&lt;br&gt;启用网络接口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;import &amp;lt;filename&amp;gt;&lt;br&gt;import其他initrc文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;insmod &amp;lt;path&amp;gt;&lt;br&gt;加载指定驱动模块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;load_all_props&lt;br&gt; Loads properties from /system, /vendor, et cetera.&lt;br&gt; This is included in the default init.rc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;load_persist_props&lt;br&gt; Loads persistent properties when /data has been decrypted.&lt;br&gt; This is included in the default init.rc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;loglevel &amp;lt;level&amp;gt;&lt;br&gt;设置log级别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mkdir &amp;lt;path&amp;gt; [mode] [owner] [group]&lt;br&gt;创建dir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mount_all &amp;lt;fstab&amp;gt;&lt;br&gt;mount所有fstab.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mount &amp;lt;type&amp;gt; &amp;lt;device&amp;gt; &amp;lt;dir&amp;gt; [ &amp;lt;flag&amp;gt; ]* [&amp;lt;options&amp;gt;]&lt;br&gt;mount文件系统到执行目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;powerctl&lt;br&gt; Internal implementation detail used to respond to changes to the&lt;br&gt; “sys.powerctl” system property, used to implement rebooting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;restart &amp;lt;service&amp;gt;&lt;br&gt;restart服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;restorecon &amp;lt;path&amp;gt; [ &amp;lt;path&amp;gt; ]*&lt;br&gt;重新存储&amp;lt;path&amp;gt;到由file_contexts配置的安全上下文.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;restorecon_recursive &amp;lt;path&amp;gt; [ &amp;lt;path&amp;gt; ]*&lt;br&gt; Recursively restore the directory tree named by &amp;lt;path&amp;gt; to the&lt;br&gt; security contexts specified in the file_contexts configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;rm &amp;lt;path&amp;gt;&lt;br&gt;rm文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;rmdir &amp;lt;path&amp;gt;&lt;br&gt;rmdir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setprop &amp;lt;name&amp;gt; &amp;lt;value&amp;gt;&lt;br&gt;设置属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setrlimit &amp;lt;resource&amp;gt; &amp;lt;cur&amp;gt; &amp;lt;max&amp;gt;&lt;br&gt;设置进程占用的资源大小，包括可打开文件数目，大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start &amp;lt;service&amp;gt;&lt;br&gt; 启动服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;stop &amp;lt;service&amp;gt;&lt;br&gt;停止服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;swapon_all &amp;lt;fstab&amp;gt;&lt;br&gt; Calls fs_mgr_swapon_all on the given fstab file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;symlink &amp;lt;target&amp;gt; &amp;lt;path&amp;gt;&lt;br&gt;创建连接到target的path符号链接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sysclktz &amp;lt;mins_west_of_gmt&amp;gt;&lt;br&gt; Set the system clock base (0 if system clock ticks in GMT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;trigger &amp;lt;event&amp;gt;&lt;br&gt;trigger的事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;verity_load_state&lt;br&gt; Internal implementation detail used to load dm-verity state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;verity_update_state &amp;lt;mount_point&amp;gt;&lt;br&gt; Internal implementation detail used to update dm-verity state and&lt;br&gt; set the partition.&amp;lt;mount_point&amp;gt;.verified properties used by adb remount&lt;br&gt; because fs_mgr can’t set them directly itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;wait &amp;lt;path&amp;gt; [ &amp;lt;timeout&amp;gt; ]&lt;br&gt; Poll文件，默认timeout为5s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;write &amp;lt;path&amp;gt; &amp;lt;content&amp;gt;&lt;br&gt;打开指定文件并写入字符串&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Properties&quot;&gt;&lt;a href=&quot;#Properties&quot; class=&quot;headerlink&quot; title=&quot;Properties&quot;&gt;&lt;/a&gt;Properties&lt;/h2&gt;&lt;p&gt;Init进程运行过程中,以下的属性值会随时更新(可通过adb shell getprop查看)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;init.action&lt;br&gt;当前执行的action&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;init.command&lt;br&gt;将被执行的命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;init.svc.&amp;lt;name&amp;gt;&lt;br&gt;服务的运行状态(“stopped”, “running”, “restarting”)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Android-Init-Language&quot;&gt;&lt;a href=&quot;#Android-Init-Language&quot; class=&quot;headerlink&quot; title=&quot;Android Init Language&quot;&gt;&lt;/a&gt;Android Init Language&lt;/h1&gt;&lt;p&gt;The Android Init Language consists of four broad classes of statements,&lt;br&gt;which are Actions, Commands, Services, and Options.&lt;/p&gt;
&lt;p&gt;All of these are line-oriented, consisting of tokens separated by&lt;br&gt;whitespace.  The c-style backslash escapes may be used to insert&lt;br&gt;whitespace into a token.  Double quotes may also be used to prevent&lt;br&gt;whitespace from breaking text into multiple tokens.  The backslash,&lt;br&gt;when it is the last character on a line, may be used for line-folding.&lt;/p&gt;
&lt;p&gt;Lines which start with a # (leading whitespace allowed) are comments.&lt;/p&gt;
&lt;p&gt;Actions and Services implicitly declare a new section.  All commands&lt;br&gt;or options belong to the section most recently declared.  Commands&lt;br&gt;or options before the first section are ignored.&lt;/p&gt;
&lt;p&gt;Actions and Services have unique names.  If a second Action or Service&lt;br&gt;is declared with the same name as an existing one, it is ignored as&lt;br&gt;an error.  (??? should we override instead)&lt;/p&gt;
&lt;h2 id=&quot;Actions-1&quot;&gt;&lt;a href=&quot;#Actions-1&quot; class=&quot;headerlink&quot; title=&quot;Actions&quot;&gt;&lt;/a&gt;Actions&lt;/h2&gt;&lt;p&gt;Actions are named sequences of commands.  Actions have a trigger which&lt;br&gt;is used to determine when the action should occur.  When an event&lt;br&gt;occurs which matches an action’s trigger, that action is added to&lt;br&gt;the tail of a to-be-executed queue (unless it is already on the&lt;br&gt;queue).&lt;/p&gt;
&lt;p&gt;Each action in the queue is dequeued in sequence and each command in&lt;br&gt;that action is executed in sequence.  Init handles other activities&lt;br&gt;(device creation/destruction, property setting, process restarting)&lt;br&gt;“between” the execution of the commands in activities.&lt;/p&gt;
&lt;p&gt;Actions take the form of:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;on &amp;lt;trigger&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Services-1&quot;&gt;&lt;a href=&quot;#Services-1&quot; class=&quot;headerlink&quot; title=&quot;Services&quot;&gt;&lt;/a&gt;Services&lt;/h2&gt;&lt;p&gt;Services are programs which init launches and (optionally) restarts&lt;br&gt;when they exit.  Services take the form of:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;service &amp;lt;name&amp;gt; &amp;lt;pathname&amp;gt; [ &amp;lt;argument&amp;gt; ]*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;option&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Options-1&quot;&gt;&lt;a href=&quot;#Options-1&quot; class=&quot;headerlink&quot; title=&quot;Options&quot;&gt;&lt;/a&gt;Options&lt;/h2&gt;&lt;p&gt;Options are modifiers to services.  They affect how and when init&lt;br&gt;runs the service.&lt;/p&gt;
&lt;p&gt;critical&lt;br&gt;  This is a device-critical service. If it exits more than four times in&lt;br&gt;  four minutes, the device will reboot into recovery mode.&lt;/p&gt;
&lt;p&gt;disabled&lt;br&gt;  This service will not automatically start with its class.&lt;br&gt;  It must be explicitly started by name.&lt;/p&gt;
&lt;p&gt;setenv &amp;lt;name&amp;gt; &amp;lt;value&amp;gt;&lt;br&gt;  Set the environment variable &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt; in the launched process.&lt;/p&gt;
&lt;p&gt;socket &amp;lt;name&amp;gt; &amp;lt;type&amp;gt; &amp;lt;perm&amp;gt; [ &amp;lt;user&amp;gt; [ &amp;lt;group&amp;gt; [ &amp;lt;seclabel&amp;gt; ] ] ]&lt;br&gt;  Create a unix domain socket named /dev/socket/&amp;lt;name&amp;gt; and pass&lt;br&gt;  its fd to the launched process.  &amp;lt;type&amp;gt; must be “dgram”, “stream” or “seqpacket”.&lt;br&gt;  User and group default to 0.&lt;br&gt;  ‘seclabel’ is the SELinux security context for the socket.&lt;br&gt;  It defaults to the service security context, as specified by seclabel or&lt;br&gt;  computed based on the service executable file security context.&lt;/p&gt;
&lt;p&gt;user &amp;lt;username&amp;gt;&lt;br&gt;  Change to username before exec’ing this service.&lt;br&gt;  Currently defaults to root.  (??? probably should default to nobody)&lt;br&gt;  Currently, if your process requires linux capabilities then you cannot use&lt;br&gt;  this command. You must instead request the capabilities in-process while&lt;br&gt;  still root, and then drop to your desired uid.&lt;/p&gt;
&lt;p&gt;group &amp;lt;groupname&amp;gt; [ &amp;lt;groupname&amp;gt; ]*&lt;br&gt;  Change to groupname before exec’ing this service.  Additional&lt;br&gt;  groupnames beyond the (required) first one are used to set the&lt;br&gt;  supplemental groups of the process (via setgroups()).&lt;br&gt;  Currently defaults to root.  (??? probably should default to nobody)&lt;/p&gt;
&lt;p&gt;seclabel &amp;lt;seclabel&amp;gt;&lt;br&gt;  Change to ‘seclabel’ before exec’ing this service.&lt;br&gt;  Primarily for use by services run from the rootfs, e.g. ueventd, adbd.&lt;br&gt;  Services on the system partition can instead use policy-defined transitions&lt;br&gt;  based on their file security context.&lt;br&gt;  If not specified and no transition is defined in policy, defaults to the init context.&lt;/p&gt;
&lt;p&gt;oneshot&lt;br&gt;  Do not restart the service when it exits.&lt;/p&gt;
&lt;p&gt;class &amp;lt;name&amp;gt;&lt;br&gt;  Specify a class name for the service.  All services in a&lt;br&gt;  named class may be started or stopped together.  A service&lt;br&gt;  is in the class “default” if one is not specified via the&lt;br&gt;  class option.&lt;/p&gt;
&lt;p&gt;onrestart&lt;br&gt;  Execute a Command (see below) when service restarts.&lt;/p&gt;
&lt;p&gt;writepid &amp;lt;file…&amp;gt;&lt;br&gt;  Write the child’s pid to the given files when it forks. Meant for&lt;br&gt;  cgroup/cpuset usage.&lt;/p&gt;
&lt;h2 id=&quot;Triggers-1&quot;&gt;&lt;a href=&quot;#Triggers-1&quot; class=&quot;headerlink&quot; title=&quot;Triggers&quot;&gt;&lt;/a&gt;Triggers&lt;/h2&gt;&lt;p&gt;Triggers are strings which can be used to match certain kinds&lt;br&gt;of events and used to cause an action to occur.&lt;/p&gt;
&lt;p&gt;boot&lt;br&gt;   This is the first trigger that will occur when init starts&lt;br&gt;   (after /init.conf is loaded)&lt;/p&gt;
&lt;p&gt;&amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;&lt;br&gt;   Triggers of this form occur when the property &amp;lt;name&amp;gt; is set&lt;br&gt;   to the specific value &amp;lt;value&amp;gt;.&lt;/p&gt;
&lt;p&gt;   One can also test multiple properties to execute a group&lt;br&gt;   of commands. For example:&lt;/p&gt;
&lt;p&gt;   on property:test.a=1 &amp;amp;&amp;amp; property:test.b=1&lt;br&gt;       setprop test.c 1&lt;/p&gt;
&lt;p&gt;   The above stub sets test.c to 1 only when&lt;br&gt;   both test.a=1 and test.b=1&lt;/p&gt;
&lt;h2 id=&quot;Commands-1&quot;&gt;&lt;a href=&quot;#Commands-1&quot; class=&quot;headerlink&quot; title=&quot;Commands&quot;&gt;&lt;/a&gt;Commands&lt;/h2&gt;&lt;p&gt;bootchart_init&lt;br&gt;   Start bootcharting if configured (see below).&lt;br&gt;   This is included in the default init.rc.&lt;/p&gt;
&lt;p&gt;chmod &amp;lt;octal-mode&amp;gt; &amp;lt;path&amp;gt;&lt;br&gt;   Change file access permissions.&lt;/p&gt;
&lt;p&gt;chown &amp;lt;owner&amp;gt; &amp;lt;group&amp;gt; &amp;lt;path&amp;gt;&lt;br&gt;   Change file owner and group.&lt;/p&gt;
&lt;p&gt;class_start &amp;lt;serviceclass&amp;gt;&lt;br&gt;   Start all services of the specified class if they are&lt;br&gt;   not already running.&lt;/p&gt;
&lt;p&gt;class_stop &amp;lt;serviceclass&amp;gt;&lt;br&gt;   Stop and disable all services of the specified class if they are&lt;br&gt;   currently running.&lt;/p&gt;
&lt;p&gt;class_reset &amp;lt;serviceclass&amp;gt;&lt;br&gt;   Stop all services of the specified class if they are&lt;br&gt;   currently running, without disabling them. They can be restarted&lt;br&gt;   later using class_start.&lt;/p&gt;
&lt;p&gt;copy &amp;lt;src&amp;gt; &amp;lt;dst&amp;gt;&lt;br&gt;   Copies a file. Similar to write, but useful for binary/large&lt;br&gt;   amounts of data.&lt;/p&gt;
&lt;p&gt;domainname &amp;lt;name&amp;gt;&lt;br&gt;   Set the domain name.&lt;/p&gt;
&lt;p&gt;enable &amp;lt;servicename&amp;gt;&lt;br&gt;   Turns a disabled service into an enabled one as if the service did not&lt;br&gt;   specify disabled.&lt;br&gt;   If the service is supposed to be running, it will be started now.&lt;br&gt;   Typically used when the bootloader sets a variable that indicates a specific&lt;br&gt;   service should be started when needed. E.g.&lt;br&gt;   &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;on property:ro.boot.myfancyhardware=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable my_fancy_service_for_my_fancy_hardware&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exec [ &amp;lt;seclabel&amp;gt; [ &amp;lt;user&amp;gt; [ &amp;lt;group&amp;gt; ]&lt;em&gt; ] ] – &amp;lt;command&amp;gt; [ &amp;lt;argument&amp;gt; ]&lt;/em&gt;&lt;br&gt;   Fork and execute command with the given arguments. The command starts&lt;br&gt;   after “–” so that an optional security context, user, and supplementary&lt;br&gt;   groups can be provided. No other commands will be run until this one&lt;br&gt;   finishes. &amp;lt;seclabel&amp;gt; can be a - to denote default.&lt;/p&gt;
&lt;p&gt;export &amp;lt;name&amp;gt; &amp;lt;value&amp;gt;&lt;br&gt;   Set the environment variable &amp;lt;name&amp;gt; equal to &amp;lt;value&amp;gt; in the&lt;br&gt;   global environment (which will be inherited by all processes&lt;br&gt;   started after this command is executed)&lt;/p&gt;
&lt;p&gt;hostname &amp;lt;name&amp;gt;&lt;br&gt;   Set the host name.&lt;/p&gt;
&lt;p&gt;ifup &amp;lt;interface&amp;gt;&lt;br&gt;   Bring the network interface &amp;lt;interface&amp;gt; online.&lt;/p&gt;
&lt;p&gt;import &amp;lt;filename&amp;gt;&lt;br&gt;   Parse an init config file, extending the current configuration.&lt;/p&gt;
&lt;p&gt;insmod &amp;lt;path&amp;gt;&lt;br&gt;   Install the module at &amp;lt;path&amp;gt;&lt;/p&gt;
&lt;p&gt;load_all_props&lt;br&gt;   Loads properties from /system, /vendor, et cetera.&lt;br&gt;   This is included in the default init.rc.&lt;/p&gt;
&lt;p&gt;load_persist_props&lt;br&gt;   Loads persistent properties when /data has been decrypted.&lt;br&gt;   This is included in the default init.rc.&lt;/p&gt;
&lt;p&gt;loglevel &amp;lt;level&amp;gt;&lt;br&gt;   Sets the kernel log level to level. Properties are expanded within &amp;lt;level&amp;gt;.&lt;/p&gt;
&lt;p&gt;mkdir &amp;lt;path&amp;gt; [mode] [owner] [group]&lt;br&gt;   Create a directory at &amp;lt;path&amp;gt;, optionally with the given mode, owner, and&lt;br&gt;   group. If not provided, the directory is created with permissions 755 and&lt;br&gt;   owned by the root user and root group. If provided, the mode, owner and group&lt;br&gt;   will be updated if the directory exists already.&lt;/p&gt;
&lt;p&gt;mount_all &amp;lt;fstab&amp;gt;&lt;br&gt;   Calls fs_mgr_mount_all on the given fs_mgr-format fstab.&lt;/p&gt;
&lt;p&gt;mount &amp;lt;type&amp;gt; &amp;lt;device&amp;gt; &amp;lt;dir&amp;gt; [ &amp;lt;flag&amp;gt; ]* [&amp;lt;options&amp;gt;]&lt;br&gt;   Attempt to mount the named device at the directory &amp;lt;dir&amp;gt;&lt;br&gt;   &amp;lt;device&amp;gt; may be of the form mtd@name to specify a mtd block&lt;br&gt;   device by name.&lt;br&gt;   &amp;lt;flag&amp;gt;s include “ro”, “rw”, “remount”, “noatime”, …&lt;br&gt;   &amp;lt;options&amp;gt; include “barrier=1”, “noauto_da_alloc”, “discard”, … as&lt;br&gt;   a comma separated string, eg: barrier=1,noauto_da_alloc&lt;/p&gt;
&lt;p&gt;powerctl&lt;br&gt;   Internal implementation detail used to respond to changes to the&lt;br&gt;   “sys.powerctl” system property, used to implement rebooting.&lt;/p&gt;
&lt;p&gt;restart &amp;lt;service&amp;gt;&lt;br&gt;   Like stop, but doesn’t disable the service.&lt;/p&gt;
&lt;p&gt;restorecon &amp;lt;path&amp;gt; [ &amp;lt;path&amp;gt; ]*&lt;br&gt;   Restore the file named by &amp;lt;path&amp;gt; to the security context specified&lt;br&gt;   in the file_contexts configuration.&lt;br&gt;   Not required for directories created by the init.rc as these are&lt;br&gt;   automatically labeled correctly by init.&lt;/p&gt;
&lt;p&gt;restorecon_recursive &amp;lt;path&amp;gt; [ &amp;lt;path&amp;gt; ]*&lt;br&gt;   Recursively restore the directory tree named by &amp;lt;path&amp;gt; to the&lt;br&gt;   security contexts specified in the file_contexts configuration.&lt;/p&gt;
&lt;p&gt;rm &amp;lt;path&amp;gt;&lt;br&gt;   Calls unlink(2) on the given path. You might want to&lt;br&gt;   use “exec – rm …” instead (provided the system partition is&lt;br&gt;   already mounted).&lt;/p&gt;
&lt;p&gt;rmdir &amp;lt;path&amp;gt;&lt;br&gt;   Calls rmdir(2) on the given path.&lt;/p&gt;
&lt;p&gt;setprop &amp;lt;name&amp;gt; &amp;lt;value&amp;gt;&lt;br&gt;   Set system property &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Properties are expanded&lt;br&gt;   within &amp;lt;value&amp;gt;.&lt;/p&gt;
&lt;p&gt;setrlimit &amp;lt;resource&amp;gt; &amp;lt;cur&amp;gt; &amp;lt;max&amp;gt;&lt;br&gt;   Set the rlimit for a resource.&lt;/p&gt;
&lt;p&gt;start &amp;lt;service&amp;gt;&lt;br&gt;   Start a service running if it is not already running.&lt;/p&gt;
&lt;p&gt;stop &amp;lt;service&amp;gt;&lt;br&gt;   Stop a service from running if it is currently running.&lt;/p&gt;
&lt;p&gt;swapon_all &amp;lt;fstab&amp;gt;&lt;br&gt;   Calls fs_mgr_swapon_all on the given fstab file.&lt;/p&gt;
&lt;p&gt;symlink &amp;lt;target&amp;gt; &amp;lt;path&amp;gt;&lt;br&gt;   Create a symbolic link at &amp;lt;path&amp;gt; with the value &amp;lt;target&amp;gt;&lt;/p&gt;
&lt;p&gt;sysclktz &amp;lt;mins_west_of_gmt&amp;gt;&lt;br&gt;   Set the system clock base (0 if system clock ticks in GMT)&lt;/p&gt;
&lt;p&gt;trigger &amp;lt;event&amp;gt;&lt;br&gt;   Trigger an event.  Used to queue an action from another&lt;br&gt;   action.&lt;/p&gt;
&lt;p&gt;verity_load_state&lt;br&gt;   Internal implementation detail used to load dm-verity state.&lt;/p&gt;
&lt;p&gt;verity_update_state &amp;lt;mount_point&amp;gt;&lt;br&gt;   Internal implementation detail used to update dm-verity state and&lt;br&gt;   set the partition.&amp;lt;mount_point&amp;gt;.verified properties used by adb remount&lt;br&gt;   because fs_mgr can’t set them directly itself.&lt;/p&gt;
&lt;p&gt;wait &amp;lt;path&amp;gt; [ &amp;lt;timeout&amp;gt; ]&lt;br&gt;   Poll for the existence of the given file and return when found,&lt;br&gt;   or the timeout has been reached. If timeout is not specified it&lt;br&gt;   currently defaults to five seconds.&lt;/p&gt;
&lt;p&gt;write &amp;lt;path&amp;gt; &amp;lt;content&amp;gt;&lt;br&gt;   Open the file at &amp;lt;path&amp;gt; and write a string to it with write(2).&lt;br&gt;   If the file does not exist, it will be created. If it does exist,&lt;br&gt;   it will be truncated. Properties are expanded within &amp;lt;content&amp;gt;.&lt;/p&gt;
&lt;h2 id=&quot;Properties-1&quot;&gt;&lt;a href=&quot;#Properties-1&quot; class=&quot;headerlink&quot; title=&quot;Properties&quot;&gt;&lt;/a&gt;Properties&lt;/h2&gt;&lt;p&gt;Init updates some system properties to provide some insight into&lt;br&gt;what it’s doing:&lt;/p&gt;
&lt;p&gt;init.action&lt;br&gt;   Equal to the name of the action currently being executed or “” if none&lt;/p&gt;
&lt;p&gt;init.command&lt;br&gt;   Equal to the command being executed or “” if none.&lt;/p&gt;
&lt;p&gt;init.svc.&amp;lt;name&amp;gt;&lt;br&gt;   State of a named service (“stopped”, “running”, “restarting”)&lt;/p&gt;
&lt;h2 id=&quot;Bootcharting&quot;&gt;&lt;a href=&quot;#Bootcharting&quot; class=&quot;headerlink&quot; title=&quot;Bootcharting&quot;&gt;&lt;/a&gt;Bootcharting&lt;/h2&gt;&lt;p&gt;This version of init contains code to perform “bootcharting”: generating log&lt;br&gt;files that can be later processed by the tools provided by www.bootchart.org.&lt;/p&gt;
&lt;p&gt;On the emulator, use the -bootchart &amp;lt;timeout&amp;gt; option to boot with bootcharting&lt;br&gt;activated for &amp;lt;timeout&amp;gt; seconds.&lt;/p&gt;
&lt;p&gt;On a device, create /data/bootchart/start with a command like the following:&lt;/p&gt;
&lt;p&gt;  adb shell ‘echo $TIMEOUT &amp;gt; /data/bootchart/start’&lt;/p&gt;
&lt;p&gt;Where the value of $TIMEOUT corresponds to the desired bootcharted period in&lt;br&gt;seconds. Bootcharting will stop after that many seconds have elapsed.&lt;br&gt;You can also stop the bootcharting at any moment by doing the following:&lt;/p&gt;
&lt;p&gt;  adb shell ‘echo 1 &amp;gt; /data/bootchart/stop’&lt;/p&gt;
&lt;p&gt;Note that /data/bootchart/stop is deleted automatically by init at the end of&lt;br&gt;the bootcharting. This is not the case with /data/bootchart/start, so don’t&lt;br&gt;forget to delete it when you’re done collecting data.&lt;/p&gt;
&lt;p&gt;The log files are written to /data/bootchart/. A script is provided to&lt;br&gt;retrieve them and create a bootchart.tgz file that can be used with the&lt;br&gt;bootchart command-line utility:&lt;/p&gt;
&lt;p&gt;  sudo apt-get install pybootchartgui&lt;br&gt;  &lt;code&gt;# grab-bootchart.sh uses $ANDROID_SERIAL.&lt;/code&gt;&lt;br&gt;  $ANDROID_BUILD_TOP/system/core/init/grab-bootchart.sh&lt;/p&gt;
&lt;p&gt;One thing to watch for is that the bootchart will show init as if it started&lt;br&gt;running at 0s. You’ll have to look at dmesg to work out when the kernel&lt;br&gt;actually started init.&lt;/p&gt;
&lt;h2 id=&quot;Debugging-init&quot;&gt;&lt;a href=&quot;#Debugging-init&quot; class=&quot;headerlink&quot; title=&quot;Debugging init&quot;&gt;&lt;/a&gt;Debugging init&lt;/h2&gt;&lt;p&gt;By default, programs executed by init will drop stdout and stderr into&lt;br&gt;/dev/null. To help with debugging, you can execute your program via the&lt;br&gt;Android program logwrapper. This will redirect stdout/stderr into the&lt;br&gt;Android logging system (accessed via logcat).&lt;/p&gt;
&lt;p&gt;For example&lt;br&gt;service akmd /system/bin/logwrapper /sbin/akmd&lt;/p&gt;
&lt;p&gt;For quicker turnaround when working on init itself, use:&lt;/p&gt;
&lt;p&gt;  mm -j&lt;br&gt;  m ramdisk-nodeps&lt;br&gt;  m bootimage-nodeps&lt;br&gt;  adb reboot bootloader&lt;br&gt;  fastboot boot $ANDROID_PRODUCT_OUT/boot.img&lt;/p&gt;
&lt;p&gt;Alternatively, use the emulator:&lt;/p&gt;
&lt;p&gt;  emulator -partition-size 1024 -verbose -show-kernel -no-window&lt;/p&gt;
&lt;p&gt;You might want to call klog_set_level(6) after the klog_init() call&lt;br&gt;so you see the kernel logging in dmesg (or the emulator output).&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;译自system/core/init/readme.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Android-init-rc语法&quot;&gt;&lt;a href=&quot;#Android-init-rc语法&quot; class=&quot;headerlink&quot; t
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Init" scheme="http://hesstudio.cn/tags/Init/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下使用rsync进行数据同步备份</title>
    <link href="http://hesstudio.cn/2016/08/19/ubuntu-rsync/"/>
    <id>http://hesstudio.cn/2016/08/19/ubuntu-rsync/</id>
    <published>2016-08-19T07:31:08.000Z</published>
    <updated>2016-08-21T01:42:41.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;rsync是remote sync的简称,它是一款类unix系统下数据同步备份,增量文件快速传输的工具.rsync采用”rsync算法”,不仅能为client和server的提供文件快速同步,并且能够对整个目录树/文件系统进行同步备份.&lt;/p&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;默认情况Ubuntu已经安装了rsync服务,如果没有安装也可通过&lt;code&gt;apt-get&lt;/code&gt;安装.&lt;br&gt;&lt;code&gt;$ sudo apt-get install rsync&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;p&gt;安装完毕后,rsync并没有默认创建rsync的配置文件,但有提供示例配置文件&lt;code&gt;/usr/share/doc/rsync/examples/rsyncd.conf&lt;/code&gt;,可以参考示例文件进行配置．&lt;br&gt;rsync需配置以下二个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rsyncd.conf　rsync配置&lt;/li&gt;
&lt;li&gt;rsyncd.secrets　rsync用户密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置rsync账号密码&lt;br&gt;&lt;code&gt;$ sudo vi /etc/rsyncd.secrets&lt;/code&gt;&lt;br&gt;按下面格式编辑&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user1:password1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user2:password2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后修改权限&lt;code&gt;$ sudo chmod 600 /etc/rsyncd.secrets&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;拷贝示例配置文件rsyncd.conf到/etc/下,然后再进行相关配置.&lt;br&gt;&lt;code&gt;$ sudo cp /usr/share/doc/rsync/examples/rsyncd.conf /etc/&lt;/code&gt;&lt;br&gt;下面是server端rsyncd.conf的相关配置,分为GLOBAL OPTIONS与MODULE OPTIONS.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# GLOBAL OPTIONS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pid file=/var/run/rsyncd.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#port = 873&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;address = 10.129.33.241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#uid = nobody&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#gid = nobody    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uid = root   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gid = root  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use chroot = yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read only = yes  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;motd file=/etc/motd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log file=/var/log/rsyncd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max connections=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeout = 600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log format = %t %a %m %f %b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# MODULE OPTIONS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[backup]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	comment = release backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	path = /home/ftp/Monster-Release/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	lock file = /var/lock/rsyncd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	list = yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	exclude =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	exclude from =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	include =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	include from =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	auth users = rsyncmonster&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	secrets file = /etc/rsyncd.secrets&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	strict modes = yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	hosts allow =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	hosts deny =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ignore errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ignore nonreadable = yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	transfer logging = no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#	log format = %t: host %h (%a) %o %f (%l bytes). Total %b bytes.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	refuse options = checksum dry-run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;全局配置说明:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pid file=/var/run/rsyncd.pid 进程pid写入到文件/var/run/rsyncd.pid&lt;/li&gt;
&lt;li&gt;address = 10.129.33.241 本机IP地址&lt;/li&gt;
&lt;li&gt;port = 873  指定运行端口，默认873&lt;/li&gt;
&lt;li&gt;uid = root 执行的用户&lt;/li&gt;
&lt;li&gt;gid = root 执行的用户组&lt;/li&gt;
&lt;li&gt;motd file=/etc/motd 服务器登陆信息,login时显示&lt;/li&gt;
&lt;li&gt;log file=/var/log/rsyncd log文件&lt;/li&gt;
&lt;li&gt;max connections=10 最大连接数&lt;/li&gt;
&lt;li&gt;timeout = 600 连接超时&lt;/li&gt;
&lt;li&gt;log format = %t %a %m %f %b log格式&lt;/li&gt;
&lt;li&gt;ignore errors 忽略IO错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模块配置说明:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;comment = release backup 描述&lt;/li&gt;
&lt;li&gt;path = /home/ftp/Monster-Release/ 同步备份目标的路径&lt;/li&gt;
&lt;li&gt;list = yes 把rsync服务器上配置显示出来&lt;/li&gt;
&lt;li&gt;auth users = user1 取rsyncd.secrets中定义的user&lt;/li&gt;
&lt;li&gt;secrets file = /etc/rsyncd.secrets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于是以uid = root运行,使用&lt;code&gt;$ sudo rsync --daemon&lt;/code&gt;启动rsync服务&lt;/p&gt;
&lt;p&gt;修改conf文件重启rsync步骤:&lt;br&gt;&lt;code&gt;$ ps -ef | grep rsync&lt;/code&gt;查看rsync进程&lt;br&gt;&lt;code&gt;$ sudo kill ${rsyncpid}&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ sudo rsync --daemon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;server端配置完成后,可在client端进行同步备份操作,同样client也需安装rsync.&lt;br&gt;列出服务端配置的module: &lt;code&gt;rsync --list-only  user@10.129.33.241::&lt;/code&gt;&lt;br&gt;同步备份: &lt;code&gt;rsync -vzrtopg --progress user@10.129.33.241::backup backupdir&lt;/code&gt;&lt;br&gt;-v: -verbose，即详细模式输出&lt;br&gt;-z: –compress 即对备份的文件在传输时进行压缩处理&lt;br&gt;-r: –recursive 以递归模式处理&lt;br&gt;-t: –times 保持文件时间信息&lt;br&gt;-o: –owner 保持文件owner信息&lt;br&gt;-p: –perms用来保持文件权限&lt;br&gt;-g: –group用来保持文件group信息&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rsync.samba.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://rsync.samba.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/community/rsync&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.ubuntu.com/community/rsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-25266990-id-114684.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.chinaunix.net/uid-25266990-id-114684.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;rsync是remote sync的简称,它是一款类unix系统下数据同步备份,增量文件快速传输的工具.rsync采用”rsync算法”,不
    
    </summary>
    
    
      <category term="Tools" scheme="http://hesstudio.cn/tags/Tools/"/>
    
      <category term="Ubuntu" scheme="http://hesstudio.cn/tags/Ubuntu/"/>
    
      <category term="rsync" scheme="http://hesstudio.cn/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>Android之LK</title>
    <link href="http://hesstudio.cn/2016/08/15/android-bootloader/"/>
    <id>http://hesstudio.cn/2016/08/15/android-bootloader/</id>
    <published>2016-08-15T11:44:54.000Z</published>
    <updated>2016-08-21T01:42:41.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;LK是Little Kernel的简称，它是一款bootloader程序，类似的bootloader还有以前的U-Boot，vivi。现在Android平台上，Qualcomm、MTK都使用LK来作为系统引导程序.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Bootloader是移动平台/嵌入式系统在开机上电后执行的一段或几段程序。通常开机上电后，在芯片内部的SRAM控制器作用下将跳转到某一固定地址执行，该位置所在即BootROM，BootROM在完成CPU Core初始化后将加载bootloader程序执行。一般bootloader都分成几个文件，分阶段引导。BootROM加载bootloader第一阶段BL1到On-chip SRAM执行，BL1在完成SOC初步的初始化后将引导BL2到SDRAM执行。以MTK平台为例,加载顺序依次为BootROM-&amp;gt;preloader-&amp;gt;LK。&lt;/p&gt;
&lt;p&gt;LK的代码一般在Android源码bootable/bootloader/lk目录下，目录结构如下：&lt;br&gt;├── app 　　　　LK上的应用，aboot，shell等&lt;br&gt;├── arch　　　　体系/架构相关，arm，x86&lt;br&gt;├── dev 　　　　设备相关，key，usb，pmic等&lt;br&gt;├── include　　　头文件&lt;br&gt;├── kernel　　　LK核心，thread，timer等&lt;br&gt;├── lib　　　　　C库&lt;br&gt;├── LICENSE&lt;br&gt;├── make　　　　编译mk文件&lt;br&gt;├── makefile&lt;br&gt;├── platform　　驱动相关&lt;br&gt;├── project　　　makefile文件&lt;br&gt;├── scripts　　　Jtag脚本&lt;br&gt;└── target　　　具体板子相关&lt;/p&gt;
&lt;p&gt;LK的主要目的是引导系统启动，它完成了以下工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬件初始化，中断向量表，MMU，cache，peripherals，storage，USB，crypto初始化&lt;/li&gt;
&lt;li&gt;加载Linux Kernel与ramdisk(boot.img/recovery.img),引导系统启动&lt;/li&gt;
&lt;li&gt;fastboot模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;初始化流程分析&quot;&gt;&lt;a href=&quot;#初始化流程分析&quot; class=&quot;headerlink&quot; title=&quot;初始化流程分析&quot;&gt;&lt;/a&gt;初始化流程分析&lt;/h1&gt;&lt;p&gt;链接脚本arch/arm/system-onesegment.ld中定义了入口地址&lt;code&gt;ENTRY(_start)&lt;/code&gt;&lt;br&gt;LK将从_start开始执行，_start在/arch/arm/crt0.S中定义。&lt;br&gt;1.crt0.S CPU相关初始化&lt;br&gt;首先初始化异常向量表&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.globl _start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_start:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	reset&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_prefetch_abort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_data_abort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_reserved&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_irq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b	arm_fiq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来执行Set Up CPU操作，调用__cpu_early_init()进行CPU相关初始化。&lt;br&gt;初始化各模式stack&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.Lstack_setup:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* set up the stack for irq, fiq, abort, undefined, system/user, and lastly supervisor mode */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mrs     r0, cpsr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bic     r0, r0, #0x1f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ldr		r2, =abort_stack_top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	orr     r1, r0, #0x12 // irq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	msr     cpsr_c, r1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ldr		r13, =irq_save_spot		/* save a pointer to a temporary dumping spot used during irq delivery */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	orr     r1, r0, #0x11 // fiq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	msr     cpsr_c, r1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mov		sp, r2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	orr     r1, r0, #0x17 // abort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	msr     cpsr_c, r1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mov		sp, r2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	orr     r1, r0, #0x1b // undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	msr     cpsr_c, r1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mov		sp, r2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	orr     r1, r0, #0x1f // system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	msr     cpsr_c, r1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mov		sp, r2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	orr		r1, r0, #0x13 // supervisor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	msr		cpsr_c, r1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mov		sp, r2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后跳入C函数kmain()中执行&lt;br&gt;&lt;code&gt;bl        kmain&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.kmain()初始化流程&lt;br&gt;kmain()在kernel/main.c的中定义，执行流程如下：&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/android/lk_call_flow.png?raw=true&quot; alt=&quot;kmain flow&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;thread_init_early();初始化线程相关结构&lt;/li&gt;
&lt;li&gt;arch_early_init();cache,mmu等初始化&lt;/li&gt;
&lt;li&gt;platform_early_init();interrupt contr，timer block初始化&lt;/li&gt;
&lt;li&gt;target_early_init();Uart等初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完成上述初始化操作后，新建线程并在新线程中执行bootstrap2&lt;br&gt;&lt;code&gt;thread_resume(thread_create(&amp;quot;bootstrap2&amp;quot;, &amp;amp;bootstrap2, NULL, DEFAULT_PRIORITY, DEFAULT_STACK_SIZE));&lt;/code&gt;&lt;br&gt;bootstrap2()分别调用arch_init();platform_init();target_init();进一步对硬件平台初始化。最后将调用apps_init()启动LK上的app。&lt;/p&gt;
&lt;p&gt;3.apps_init()&lt;br&gt;apps_init的实现如下，首先遍历&lt;strong&gt;__apps_start&lt;/strong&gt;到&lt;strong&gt;__apps_end&lt;/strong&gt;位置的app_descriptor，并调用其init函数，然后在新线程中start app。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor __apps_start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor __apps_end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start_app&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor *app)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* one time setup */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apps_init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor *app;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* call all the init routines */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (app = &amp;amp;__apps_start; app != &amp;amp;__apps_end; app++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (app-&amp;gt;init)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			app-&amp;gt;init(app);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* start any that want to start on boot */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (app = &amp;amp;__apps_start; app != &amp;amp;__apps_end; app++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (app-&amp;gt;entry &amp;amp;&amp;amp; (app-&amp;gt;flags &amp;amp; APP_FLAG_DONT_START_ON_BOOT) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			start_app(app);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;app_thread_entry&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *arg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor *app = (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor *)arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	app-&amp;gt;entry(app, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start_app&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; app_descriptor *app)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;thread_t&lt;/span&gt; *thr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;starting app %s\n&quot;&lt;/span&gt;, app-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thr = thread_create(app-&amp;gt;name, &amp;amp;app_thread_entry, (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)app, DEFAULT_PRIORITY, DEFAULT_STACK_SIZE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!thr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thread_resume(thr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;strong&gt;__apps_start&lt;/strong&gt;与&lt;strong&gt;__apps_end&lt;/strong&gt;在链接脚本arch/arm/system-onesegment.ld中定义，&lt;strong&gt;__apps_start&lt;/strong&gt;与&lt;strong&gt;__apps_end&lt;/strong&gt;与中间存放的是apps section。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.rodata : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*(.rodata .rodata.* .gnu.linkonce.r.*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	. = ALIGN(4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	__commands_start = .;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	KEEP (*(.commands))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	__commands_end = .;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	. = ALIGN(4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	__apps_start = .;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	KEEP (*(.apps))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	__apps_end = .;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	. = ALIGN(4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	__rodata_end = . ;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所有的LK app都需定义app_descriptor结构体存放到apps段，app_descriptor在include/app.h中定义&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* each app needs to define one of these to define its startup conditions */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct app_descriptor &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	const char *name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	app_init  init;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	app_entry entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	unsigned int flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define APP_START(appname) struct app_descriptor _app_##appname __SECTION(&amp;quot;.apps&amp;quot;) = &amp;#123; .name = #appname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define APP_END &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过宏&lt;strong&gt;APP_START&lt;/strong&gt;与&lt;strong&gt;APP_END&lt;/strong&gt;定义app_descriptor结构体并放到apps sections中，例如在aboot.c的定义如下：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;APP_START(aboot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.init = aboot_init,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;APP_END&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即定义了aboot的app_descriptor结构体并存放在apps section中，在apps_init中将调用到aboot_init()&lt;br&gt;至此，初始化流程结束。&lt;/p&gt;
&lt;h1 id=&quot;系统引导流程分析&quot;&gt;&lt;a href=&quot;#系统引导流程分析&quot; class=&quot;headerlink&quot; title=&quot;系统引导流程分析&quot;&gt;&lt;/a&gt;系统引导流程分析&lt;/h1&gt;&lt;p&gt;aboot的主要目的是进行系统引导，它会根据开机模式来决定进入Main System或Recovery或fastboot。&lt;br&gt;下面从aboot_init()来分析整个流程：&lt;br&gt;1.首先设置EMMC/NAND读取page大小&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (target_is_emmc_boot())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	page_size = mmc_page_size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	page_mask = page_size - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	page_size = flash_page_size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	page_mask = page_size - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.选择开机模式&lt;br&gt;通过keys_get_state()与check_reboot_mode()确定开机模式。&lt;br&gt;keys_get_state()会检测按键，并根据按键的定义确定进入对应的模式。&lt;br&gt;check_reboot_mode()会读取指定memory位置信息，该位置信息由kernel shutdown时写入，例如执行&lt;code&gt;adb reboot recovery&lt;/code&gt;，&lt;code&gt;adb reboot bootloader&lt;/code&gt;，check_reboot_mode()获取的分别是&lt;code&gt;RECOVERY_MODE&lt;/code&gt;，&lt;code&gt;FASTBOOT_MODE&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;reboot_mode = check_reboot_mode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (reboot_mode == RECOVERY_MODE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boot_into_recovery = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(reboot_mode == FASTBOOT_MODE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boot_into_fastboot = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(reboot_mode == ALARM_BOOT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boot_reason_alarm = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果reboot_mode不是&lt;code&gt;FASTBOOT_MODE&lt;/code&gt;，将调用boot_linux_from_mmc()进入系统引导流程&lt;br&gt;如果reboot_mode等于&lt;code&gt;FASTBOOT_MODE&lt;/code&gt;，将执行fastboot_init()进入fastboot模式&lt;br&gt;3.boot_linux_from_mmc()&lt;br&gt;boot_linux_from_mmc()解析boot.img/recovery.img的头部boot_img_hdr结构来获取启动加载信息(如果是recovery模式,将从recovery分区加载recovery.img),其中cmdline对应传递给内核的参数,tags_addr对应device tree table,boot_img_hdr结构体在app/aboot/bootimg.h中定义,如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#define BOOT_MAGIC &amp;quot;ANDROID!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define BOOT_MAGIC_SIZE 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define BOOT_NAME_SIZE  16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define BOOT_ARGS_SIZE  512&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define BOOT_IMG_MAX_PAGE_SIZE 4096&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct boot_img_hdr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned char magic[BOOT_MAGIC_SIZE];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned kernel_size;  /* size in bytes */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned kernel_addr;  /* physical load addr */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned ramdisk_size; /* size in bytes */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned ramdisk_addr; /* physical load addr */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned second_size;  /* size in bytes */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned second_addr;  /* physical load addr */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned tags_addr;    /* physical addr for kernel tags */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned page_size;    /* flash page size we assume */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned dt_size;      /* device_tree in bytes */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned unused;    /* future expansion: should be 0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned char name[BOOT_NAME_SIZE]; /* asciiz product name */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned char cmdline[BOOT_ARGS_SIZE];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned id[8]; /* timestamp / checksum / sha1 / etc */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;生成的boot.img/recovery.img头部如下图示：&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/android/bootimg.png?raw=true&quot; alt=&quot;boot_img_hdr&quot;&gt;&lt;br&gt;根据boot_img_hdr结构的定义可以从上图获取到一下信息：&lt;br&gt;&lt;strong&gt;kernel_size:&lt;/strong&gt; 0x009fc707&lt;br&gt;&lt;strong&gt;kernel_addr:&lt;/strong&gt; 0x80008000&lt;br&gt;&lt;strong&gt;ramdisk_size:&lt;/strong&gt; 0x001ddfb9&lt;br&gt;&lt;strong&gt;ramdisk_addr:&lt;/strong&gt; 0x81000000&lt;br&gt;&lt;strong&gt;second_size:&lt;/strong&gt; 0x00000000&lt;br&gt;&lt;strong&gt;second_addr:&lt;/strong&gt; 0x80f00000&lt;br&gt;&lt;strong&gt;tags_addr:&lt;/strong&gt; 0x80000100&lt;br&gt;&lt;strong&gt;page_size:&lt;/strong&gt; 0x00000100&lt;br&gt;&lt;strong&gt;cmdline:&lt;/strong&gt;&lt;br&gt;console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 androidboot.hardware=qcom user_debug=31 msm_rtb.filter=0x237 ehci-hcd.park=3 lpm_levels.sleep_disabled=1 cma=32M@0-0xffffffff androidboot.selinux=permissive&lt;/p&gt;
&lt;p&gt;在解析完boot_img_hdr后，boot_img_hdr的信息被传递给boot_linux执行具体的加载启动工作。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;boot_linux((void *)hdr-&amp;gt;kernel_addr, (void *)hdr-&amp;gt;tags_addr,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 (const char *)hdr-&amp;gt;cmdline, board_machtype(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 (void *)hdr-&amp;gt;ramdisk_addr, hdr-&amp;gt;ramdisk_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; typedef void entry_func_ptr(unsigned, unsigned, unsigned*);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; void boot_linux(void *kernel, unsigned *tags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		const char *cmdline, unsigned machtype,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		void *ramdisk, unsigned ramdisk_size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	unsigned char *final_cmdline;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #if DEVICE_TREE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	int ret = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	void (*entry)(unsigned, unsigned, unsigned*) = (entry_func_ptr*)(PA((addr_t)kernel));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	uint32_t tags_phys = PA((addr_t)tags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	struct kernel64_hdr *kptr = (struct kernel64_hdr*)kernel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	ramdisk = (void *)PA((addr_t)ramdisk);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	final_cmdline = update_cmdline((const char*)cmdline);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #if DEVICE_TREE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	dprintf(INFO, &amp;quot;Updating device tree: start\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* Update the Device Tree */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	ret = update_device_tree((void *)tags,(const char *)final_cmdline, ramdisk, ramdisk_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	if(ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		dprintf(CRITICAL, &amp;quot;ERROR: Updating Device Tree Failed \n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		ASSERT(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	dprintf(INFO, &amp;quot;Updating device tree: done\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* Generating the Atags */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	generate_atags(tags, final_cmdline, ramdisk, ramdisk_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	free(final_cmdline);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #if VERIFIED_BOOT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* Write protect the device info */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	if (!boot_into_recovery &amp;amp;&amp;amp; target_build_variant_user() &amp;amp;&amp;amp; devinfo_present &amp;amp;&amp;amp; mmc_write_protect(&amp;quot;devinfo&amp;quot;, 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		dprintf(INFO, &amp;quot;Failed to write protect dev info\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		ASSERT(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* Turn off splash screen if enabled */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #if DISPLAY_SPLASH_SCREEN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	target_display_shutdown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* Perform target specific cleanup */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	target_uninit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	dprintf(INFO, &amp;quot;booting linux @ %p, ramdisk @ %p (%d), tags/device tree @ %p\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		entry, ramdisk, ramdisk_size, (void *)tags_phys);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	enter_critical_section();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* Initialise wdog to catch early kernel crashes */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #if WDOG_SUPPORT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	msm_wdog_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/* do any platform specific cleanup before kernel entry */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	platform_uninit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	arch_disable_cache(UCACHE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #if ARM_WITH_MMU&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	arch_disable_mmu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	bs_set_timestamp(BS_KERNEL_ENTRY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	if (IS_ARM64(kptr))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		/* Jump to a 64bit kernel */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		scm_elexec_call((paddr_t)kernel, tags_phys);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		/* Jump to a 32bit kernel */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		entry(0, machtype, (unsigned*)tags_phys);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，LK引导过程完成，将进入系统启动过程。&lt;/p&gt;
&lt;h1 id=&quot;LK-fastboot模式&quot;&gt;&lt;a href=&quot;#LK-fastboot模式&quot; class=&quot;headerlink&quot; title=&quot;LK fastboot模式&quot;&gt;&lt;/a&gt;LK fastboot模式&lt;/h1&gt;&lt;p&gt;当LK通过检测按键或reboot_mode是&lt;code&gt;FASTBOOT_MODE&lt;/code&gt;时，将进入到fastboot模式。&lt;br&gt;1.注册fastboot Command&lt;br&gt;通过aboot_fastboot_register_commands()注册fastboot支持的命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void aboot_fastboot_register_commands(void)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	char hw_platform_buf[MAX_RSP_SIZE];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	struct fastboot_cmd_desc cmd_list[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						/* By default the enabled list is empty. */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;&amp;quot;, NULL&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						/* move commands enclosed within the below ifndef to here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						 * if they need to be enabled in user build.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#ifndef DISABLE_FASTBOOT_CMDS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						/* Register the following commands only for non-user builds */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;flash:&amp;quot;, cmd_flash&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;erase:&amp;quot;, cmd_erase&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;boot&amp;quot;, cmd_boot&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;continue&amp;quot;, cmd_continue&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;reboot&amp;quot;, cmd_reboot&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;reboot-bootloader&amp;quot;, cmd_reboot_bootloader&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem unlock&amp;quot;, cmd_oem_unlock&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem unlock-go&amp;quot;, cmd_oem_unlock_go&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem lock&amp;quot;, cmd_oem_lock&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;flashing unlock&amp;quot;, cmd_oem_unlock&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;flashing lock&amp;quot;, cmd_oem_lock&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;flashing lock_critical&amp;quot;, cmd_flashing_lock_critical&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;flashing unlock_critical&amp;quot;, cmd_flashing_unlock_critical&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;flashing get_unlock_ability&amp;quot;, cmd_flashing_get_unlock_ability&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem device-info&amp;quot;, cmd_oem_devinfo&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;preflash&amp;quot;, cmd_preflash&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem enable-charger-screen&amp;quot;, cmd_oem_enable_charger_screen&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem disable-charger-screen&amp;quot;, cmd_oem_disable_charger_screen&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem off-mode-charge&amp;quot;, cmd_oem_off_mode_charger&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem select-display-panel&amp;quot;, cmd_oem_select_display_panel&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if UNITTEST_FW_SUPPORT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#123;&amp;quot;oem run-tests&amp;quot;, cmd_oem_runtests&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int fastboot_cmds_count = sizeof(cmd_list)/sizeof(cmd_list[0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (i = 1; i &amp;lt; fastboot_cmds_count; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fastboot_register(cmd_list[i].name,cmd_list[i].cb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* publish variables and their values */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;product&amp;quot;,  TARGET(BOARD));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;kernel&amp;quot;,   &amp;quot;lk&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;serialno&amp;quot;, sn_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * partition info is supported only for emmc partitions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * Calling this for NAND prints some error messages which&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * is harmless but misleading. Avoid calling this for NAND&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * devices.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (target_is_emmc_boot())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		publish_getvar_partition_info(part_info, ARRAY_SIZE(part_info));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* Max download size supported */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	snprintf(max_download_size, MAX_RSP_SIZE, &amp;quot;\t0x%x&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			target_get_max_flash_size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;max-download-size&amp;quot;, (const char *) max_download_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* Is the charger screen check enabled */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	snprintf(charger_screen_enabled, MAX_RSP_SIZE, &amp;quot;%d&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			device.charger_screen_enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;charger-screen-enabled&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			(const char *) charger_screen_enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;off-mode-charge&amp;quot;, (const char *) charger_screen_enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	snprintf(panel_display_mode, MAX_RSP_SIZE, &amp;quot;%s&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			device.display_panel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;display-panel&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			(const char *) panel_display_mode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;version-bootloader&amp;quot;, (const char *) device.bootloader_version);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;version-baseband&amp;quot;, (const char *) device.radio_version);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;secure&amp;quot;, is_secure_boot_enable()? &amp;quot;yes&amp;quot;:&amp;quot;no&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	smem_get_hw_platform_name((unsigned char *) hw_platform_buf, sizeof(hw_platform_buf));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	snprintf(get_variant, MAX_RSP_SIZE, &amp;quot;%s %s&amp;quot;, hw_platform_buf,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		target_is_emmc_boot()? &amp;quot;eMMC&amp;quot;:&amp;quot;UFS&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;variant&amp;quot;, (const char *) get_variant);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if CHECK_BAT_VOLTAGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	update_battery_status();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;battery-voltage&amp;quot;, (const char *) battery_voltage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;battery-soc-ok&amp;quot;, (const char *) battery_soc_ok);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中主要是通过fastboot_register注册Command到cmdlist，通过fastboot_publish注册variables到varlist。&lt;br&gt;它们的实现如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static struct fastboot_cmd *cmdlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void fastboot_register(const char *prefix,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		       void (*handle)(const char *arg, void *data, unsigned sz))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	struct fastboot_cmd *cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cmd = malloc(sizeof(*cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (cmd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmd-&amp;gt;prefix = prefix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmd-&amp;gt;prefix_len = strlen(prefix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmd-&amp;gt;handle = handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmd-&amp;gt;next = cmdlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmdlist = cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static struct fastboot_var *varlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void fastboot_publish(const char *name, const char *value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	struct fastboot_var *var;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var = malloc(sizeof(*var));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (var) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var-&amp;gt;name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var-&amp;gt;value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var-&amp;gt;next = varlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		varlist = var;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行adb reboot bootloader进入fastboot模式后，可以在PC端的fastboot可执行文件(Fastboot客户端源码在system/core/fastboot下，通过系统源码编译后的科执行文件位于./out/host/linux-x86/bin/fastboot目录下)与目标按fastboot协议交互。&lt;br&gt;通过fastboot_register注册到cmdlist的命令，都可以在pc端通过fastboot执行，常用的命令有：&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  devices&lt;/code&gt;&lt;/strong&gt; 查看连接设备&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  update &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/strong&gt; 更新update.zip包&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  flashall&lt;/code&gt;&lt;/strong&gt; flash boot, system, vendor, and recovery&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  flash &amp;lt;partition&amp;gt; [ &amp;lt;filename&amp;gt; ]&lt;/code&gt;&lt;/strong&gt; flash指定分区&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  erase &amp;lt;partition&amp;gt;&lt;/code&gt;&lt;/strong&gt; erase执行分区&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  continue&lt;/code&gt;&lt;/strong&gt; 继续启动&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  reboot bootloader&lt;/code&gt;&lt;/strong&gt; reboot到bootloader&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot  oem unlock&lt;/code&gt;&lt;/strong&gt; oem解锁&lt;/p&gt;
&lt;p&gt;通过fastboot_publish publish到varlist的value可以通过&lt;code&gt;fastboot getvar &amp;lt;variable&amp;gt;&lt;/code&gt;获取，例如&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot getvar version&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;fastboot getvar product&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.启动fastboot&lt;br&gt;通过&lt;code&gt;fastboot_init(target_get_scratch_address(), target_get_max_flash_size());&lt;/code&gt;初始化并启动fastboot。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int fastboot_init(void *base, unsigned size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	char sn_buf[13];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thread_t *thr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dprintf(INFO, &amp;quot;fastboot_init()\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	download_base = base;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	download_max = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* target specific initialization before going into fastboot. */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	target_fastboot_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* setup serialno */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	target_serialno((unsigned char *) sn_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dprintf(SPEW,&amp;quot;serial number: %s\n&amp;quot;,sn_buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	surf_udc_device.serialno = sn_buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if(!strcmp(target_usb_controller(), &amp;quot;dwc&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#ifdef USB30_SUPPORT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		surf_udc_device.t_usb_if = target_usb30_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		/* initialize udc functions to use dwc controller */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_init            = usb30_udc_init;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_register_gadget = usb30_udc_register_gadget;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_start           = usb30_udc_start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_stop            = usb30_udc_stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_endpoint_alloc  = usb30_udc_endpoint_alloc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_request_alloc   = usb30_udc_request_alloc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_request_free    = usb30_udc_request_free;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.usb_read            = usb30_usb_read;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.usb_write           = usb30_usb_write;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dprintf(CRITICAL, &amp;quot;USB30 needs to be enabled for this target.\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ASSERT(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		/* initialize udc functions to use the default chipidea controller */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_init            = udc_init;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_register_gadget = udc_register_gadget;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_start           = udc_start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_stop            = udc_stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_endpoint_alloc  = udc_endpoint_alloc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_request_alloc   = udc_request_alloc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.udc_request_free    = udc_request_free;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.usb_read            = hsusb_usb_read;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		usb_if.usb_write           = hsusb_usb_write;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* register udc device */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	usb_if.udc_init(&amp;amp;surf_udc_device);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	event_init(&amp;amp;usb_online, 0, EVENT_FLAG_AUTOUNSIGNAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	event_init(&amp;amp;txn_done, 0, EVENT_FLAG_AUTOUNSIGNAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	in = usb_if.udc_endpoint_alloc(UDC_TYPE_BULK_IN, 512);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!in)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail_alloc_in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	out = usb_if.udc_endpoint_alloc(UDC_TYPE_BULK_OUT, 512);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!out)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail_alloc_out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_endpoints[0] = in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_endpoints[1] = out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	req = usb_if.udc_request_alloc();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail_alloc_req;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* register gadget */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (usb_if.udc_register_gadget(&amp;amp;fastboot_gadget))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail_udc_register;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_register(&amp;quot;getvar:&amp;quot;, cmd_getvar);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_register(&amp;quot;download:&amp;quot;, cmd_download);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_publish(&amp;quot;version&amp;quot;, &amp;quot;0.5&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thr = thread_create(&amp;quot;fastboot&amp;quot;, fastboot_handler, 0, DEFAULT_PRIORITY, 4096);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!thr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail_alloc_in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thread_resume(thr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	usb_if.udc_start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fail_udc_register:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	usb_if.udc_request_free(req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fail_alloc_req:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	usb_if.udc_endpoint_free(out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fail_alloc_out:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	usb_if.udc_endpoint_free(in);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fail_alloc_in:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fastboot_init()主要工作是初始化usb_controller_interface,然后调用usb_if.udc_start()监听usb event,在新建线程等待usb event并调用fastboot_handler处理。fastboot_init后display_fastboot_menu_thread()将会在新线程中被调用,即用来在LCD上显示fastboot菜单。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static int fastboot_handler(void *arg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (;;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		event_wait(&amp;amp;usb_online);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fastboot_command_loop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fastboot_handler中等待usb事件，通过usb_if.usb_read()读取usb数据，并检索出对应cmdlist里的命令调用。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void fastboot_command_loop(void)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	struct fastboot_cmd *cmd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if CHECK_BAT_VOLTAGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boolean is_first_erase_flash = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dprintf(INFO,&amp;quot;fastboot: processing commands\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	uint8_t *buffer = (uint8_t *)memalign(CACHE_LINE, ROUNDUP(4096, CACHE_LINE));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!buffer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dprintf(CRITICAL, &amp;quot;Could not allocate memory for fastboot buffer\n.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ASSERT(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;again:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	while (fastboot_state != STATE_ERROR) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		/* Read buffer must be cleared first. If buffer is not cleared,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * the original data in buf trailing the received command is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * interpreted as part of the command.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		memset(buffer, 0, MAX_RSP_SIZE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		arch_clean_invalidate_cache_range((addr_t) buffer, MAX_RSP_SIZE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		r = usb_if.usb_read(buffer, MAX_RSP_SIZE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (r &amp;lt; 0) break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		buffer[r] = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dprintf(INFO,&amp;quot;fastboot: %s\n&amp;quot;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if CHECK_BAT_VOLTAGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		/* check battery voltage before erase or flash image */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (!strncmp((const char*) buffer, &amp;quot;getvar:partition-type&amp;quot;, 21))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			is_first_erase_flash = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (is_first_erase_flash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (!strncmp((const char*) buffer, &amp;quot;erase&amp;quot;, 5) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				!strncmp((const char*) buffer, &amp;quot;flash&amp;quot;, 5)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				if (!target_battery_soc_ok()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					dprintf(INFO,&amp;quot;fastboot: battery voltage: %d\n&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						target_get_battery_voltage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					fastboot_fail(&amp;quot;Warning: battery&amp;apos;s capacity is very low\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fastboot_state = STATE_COMMAND;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (cmd = cmdlist; cmd; cmd = cmd-&amp;gt;next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (memcmp(buffer, cmd-&amp;gt;prefix, cmd-&amp;gt;prefix_len))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cmd-&amp;gt;handle((const char*) buffer + cmd-&amp;gt;prefix_len,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				    (void*) download_base, download_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (fastboot_state == STATE_COMMAND)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fastboot_fail(&amp;quot;unknown reason&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if CHECK_BAT_VOLTAGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (!strncmp((const char*) buffer, &amp;quot;erase&amp;quot;, 5) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				!strncmp((const char*) buffer, &amp;quot;flash&amp;quot;, 5)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				if (is_first_erase_flash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					is_first_erase_flash = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			goto again;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fastboot_fail(&amp;quot;unknown command&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fastboot_state = STATE_OFFLINE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dprintf(INFO,&amp;quot;fastboot: oops!\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	free(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Device-tree&quot;&gt;&lt;a href=&quot;#Device-tree&quot; class=&quot;headerlink&quot; title=&quot;Device tree&quot;&gt;&lt;/a&gt;Device tree&lt;/h1&gt;&lt;p&gt;Device tree是描述设备硬件信息的数据结构，通过.dts源文件定义，一般位于kernel/arch/arm/boot/dts目录下, .dts编译生成.dtb文件后将LK传递给kernel执行设备初始化工作。&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/android/device_tree.png?raw=true&quot; alt=&quot;Device Tree&quot;&gt;&lt;br&gt;关于Device Tree的详细说明，可参考宋宝华老师的博文 &lt;a href=&quot;http://blog.csdn.net/21cnbao/article/details/8457546&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ARM Linux 3.x的设备树（Device Tree）&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;LK是Little Kernel的简称，它是一款bootloader程序，类似的bootloader还有以前的U-Boot，vivi。现在Android平台上，Qualcomm、MTK都使用LK来作为系统引导程序.&lt;/p&gt;
&lt;/blockquote
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="LK" scheme="http://hesstudio.cn/tags/LK/"/>
    
  </entry>
  
  <entry>
    <title>Android之Gradle</title>
    <link href="http://hesstudio.cn/2016/08/06/android-tools-build-gradle/"/>
    <id>http://hesstudio.cn/2016/08/06/android-tools-build-gradle/</id>
    <published>2016-08-06T02:19:58.000Z</published>
    <updated>2016-08-06T13:42:56.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Building-the-Android-Gradle-Plugin&quot;&gt;&lt;a href=&quot;#Building-the-Android-Gradle-Plugin&quot; class=&quot;headerlink&quot; title=&quot;Building the Android Gradle Plugin&quot;&gt;&lt;/a&gt;Building the Android Gradle Plugin&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://tools.android.com/build&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tools.android.com/build&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$ mkdir studio-master-dev&lt;br&gt;$ cd studio-master-dev&lt;br&gt;$ repo init -u &lt;a href=&quot;https://android.googlesource.com/platform/manifest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://android.googlesource.com/platform/manifest&lt;/a&gt; -b studio-master-dev&lt;br&gt;$ repo sync&lt;/p&gt;
&lt;p&gt;sudo add-apt-repository ppa:openjdk-r/ppa&lt;br&gt;sudo apt-get update&lt;br&gt;sudo apt-get install openjdk-8-jdk&lt;br&gt;sudo update-alternatives –config java&lt;br&gt;sudo update-alternatives –config javac&lt;/p&gt;
&lt;p&gt;$ cd tools&lt;br&gt;$ ./gradlew init&lt;br&gt;$ ./gradlew assemble&lt;br&gt;$ ./gradlew publishLocal&lt;/p&gt;
&lt;p&gt;关于String 定义msgid后字符串重名的问题，由于不是标准Application做法，gradle不支持&lt;br&gt;代码见sdk-common/src/main/java/com/android/ide/common/res2/ValueResourceParser2.java&lt;br&gt;checkDuplicate() -&amp;gt;&lt;br&gt;else if (set.contains(name) &amp;amp;&amp;amp; resource.getType() != ResourceType.PUBLIC) {&lt;br&gt;                System.out.println(“checkDuplicate ——&amp;gt; “ + resource.getType());&lt;br&gt;                throw MergingException.withMessage(&lt;br&gt;                        “Found item %s/%s more than one time”,&lt;br&gt;                        resource.getType().getDisplayName(), name).withFile(from).build();&lt;br&gt;            }&lt;/p&gt;
&lt;p&gt;关于Gradle vs. Make for AOSP build，参考&lt;a href=&quot;https://groups.google.com/forum/#!topic/android-building/dxP0tp0e1MI&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://groups.google.com/forum/#!topic/android-building/dxP0tp0e1MI&lt;/a&gt;　&lt;br&gt;关于Gradle参考&lt;a href=&quot;http://tools.android.com/tech-docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tools.android.com/tech-docs&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Building-the-Android-Gradle-Plugin&quot;&gt;&lt;a href=&quot;#Building-the-Android-Gradle-Plugin&quot; class=&quot;headerlink&quot; title=&quot;Building the Android Gra
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Gradle" scheme="http://hesstudio.cn/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 14.04 Nexus Maven私服搭建</title>
    <link href="http://hesstudio.cn/2016/08/03/ubuntu-nexus-maven/"/>
    <id>http://hesstudio.cn/2016/08/03/ubuntu-nexus-maven/</id>
    <published>2016-08-03T08:13:06.000Z</published>
    <updated>2016-08-21T01:42:41.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Maven是Apache基于POM(project object model)一个项目管理工具.Maven能够管理项目的构建build,reporting和documentation.&lt;/p&gt;
&lt;p&gt;Nexus是一个强大的Maven仓库管理器，它极大地简化了内部仓库的维护和外部仓库的访问，可以在局域网搭建一个maven私服,用来部署第三方公共构件或者作为远程仓库在该局域网的一个代理.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;搭建&quot;&gt;&lt;a href=&quot;#搭建&quot; class=&quot;headerlink&quot; title=&quot;搭建&quot;&gt;&lt;/a&gt;搭建&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载&lt;br&gt;我们使用Nexus OSS开源版开源版进行环境搭建，&lt;a href=&quot;http://www.sonatype.com/download-oss-sonatype&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网下载&lt;/a&gt; All platform的版本&lt;a href=&quot;https://sonatype-download.global.ssl.fastly.net/nexus/oss/nexus-2.13.0-01-bundle.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nexus-2.13.0-01-bundle.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;br&gt;&lt;code&gt;$ sudo cp nexus-2.13.0-01-bundle.tar.gz /usr/local&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ cd /usr/local&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ sudo tar -zxvf nexus-2.13.0-01-bundle.tar.gz&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ sudo ln -s nexus-2.13.0-01 nexus&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ sudo nexus/bin/nexus&lt;/code&gt;&lt;br&gt;输出：&lt;code&gt;Usage: nexus/bin/nexus { console | start | stop | restart | status | dump }&lt;/code&gt;　即表示安装成功&lt;br&gt;&lt;code&gt;$ sudo vim bin/nexus&lt;/code&gt; 修改&lt;code&gt;#RUN_AS_USER=&lt;/code&gt;为&lt;code&gt;RUN_AS_USER=root&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ sudo bin/nexus start&lt;/code&gt;启动nexus&lt;br&gt;浏览器登陆&lt;a href=&quot;http://localhost:8081/nexus，默认用户名:admin，密码:admin123&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8081/nexus，默认用户名:admin，密码:admin123&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://github.com/XRobinHe/Resource/blob/master/blog/image/ubuntu/nexus-welcome.png?raw=true&quot; alt=&quot;nexus welcome&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;设置开机启动：&lt;br&gt;&lt;code&gt;$ sudo cp /usr/local/nexus/bin/nexus /etc/init.d/&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ sudo vim /etc/init.d/nexus&lt;/code&gt;&lt;br&gt;设置&lt;br&gt;&lt;code&gt;NEXUS_HOME=&amp;quot;/usr/local/nexus&amp;quot;&lt;/code&gt;&lt;br&gt;&lt;code&gt;RUN_AS_USER=root&lt;/code&gt;&lt;br&gt;&lt;code&gt;PIDDIR=&amp;quot;/var/run&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Repositories配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/l2show/article/details/48653949&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/l2show/article/details/48653949&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Maven是Apache基于POM(project object model)一个项目管理工具.Maven能够管理项目的构建build,reporting和documentation.&lt;/p&gt;
&lt;p&gt;Nexus是一个强大的Maven仓库管理器，它极
    
    </summary>
    
    
      <category term="Nexus" scheme="http://hesstudio.cn/tags/Nexus/"/>
    
      <category term="Maven" scheme="http://hesstudio.cn/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Android之抓包</title>
    <link href="http://hesstudio.cn/2016/07/14/android-tcpdump/"/>
    <id>http://hesstudio.cn/2016/07/14/android-tcpdump/</id>
    <published>2016-07-14T05:42:46.000Z</published>
    <updated>2016-08-21T01:42:01.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;在实际开发中，如果需要在Android平台上进行网络数据包的抓取，那么使用tcpdump是非常方便的.通过tcpdump抓取数据包，pull到本地后可以利用Wireshark非常直观地分析数据包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Root Android设备&lt;/li&gt;
&lt;li&gt;下载安装&lt;a href=&quot;https://www.wireshark.org/#download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wireshark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载&lt;a href=&quot;http://www.androidtcpdump.com/android-tcpdump/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android tcpdump binary文件&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;adb root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adb remount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adb push tcpdump /system/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chmod 6755 /system/bin/tcpdump&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcpdump -i any -p -s 0 -w /sdcard/capture.pcap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;adb pull /sdcard/capture.pcap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wireshark分析capture.pcap数据包&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;tcpdump参数&quot;&gt;&lt;a href=&quot;#tcpdump参数&quot; class=&quot;headerlink&quot; title=&quot;tcpdump参数&quot;&gt;&lt;/a&gt;tcpdump参数&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;-i&lt;br&gt;监视指定网络接口的数据包，可通过tcpdump -D查看可抓包的网卡&lt;/li&gt;
&lt;li&gt;-p&lt;br&gt;一般情况下,把网络接口设置为非’混杂’模式.但必须注意,在特殊情况下此网络接口还是会以’混杂’模式来工作；从而,’-p’的设与不设,不能当做以下选现的代名词:’ether host {local-hw-add}’或’ether broadcast’(nt: 前者表示只匹配以太网地址为host 的包, 后者表示匹配以太网地址为广播地址的数据包).&lt;/li&gt;
&lt;li&gt;-s&lt;br&gt;抓取数据包时默认抓取长度为68字节,-S 0指定可以抓到完整的数据包&lt;/li&gt;
&lt;li&gt;-w&lt;br&gt;保存成pacp/cap文件，供Wireshark分析&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.androidtcpdump.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android tcpdump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tcpdump.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tcpdump.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wireshark.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wireshark&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;在实际开发中，如果需要在Android平台上进行网络数据包的抓取，那么使用tcpdump是非常方便的.通过tcpdump抓取数据包，pull到本地后可以利用Wireshark非常直观地分析数据包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Tools" scheme="http://hesstudio.cn/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Android编译之模块编译</title>
    <link href="http://hesstudio.cn/2016/07/08/android-build-4/"/>
    <id>http://hesstudio.cn/2016/07/08/android-build-4/</id>
    <published>2016-07-08T07:08:57.000Z</published>
    <updated>2016-08-06T13:42:56.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Android中的各种模块，无论apk，可执行文件，或jar包等都可通过Build系统编译生成。这些模块的编译规则通过各个模块下的Android.mk来定义.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Android-mk分析&quot;&gt;&lt;a href=&quot;#Android-mk分析&quot; class=&quot;headerlink&quot; title=&quot;Android.mk分析&quot;&gt;&lt;/a&gt;Android.mk分析&lt;/h1&gt;&lt;p&gt;下面是Settings的Android.mk：&lt;br&gt;&lt;figure class=&quot;highlight makefile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PATH:= &lt;span class=&quot;variable&quot;&gt;$(call my-dir)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(CLEAR_VARS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_JAVA_LIBRARIES := bouncycastle conscrypt telephony-common ims-common&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_STATIC_JAVA_LIBRARIES := android-support-v4 android-support-v13 jsr305&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_MODULE_TAGS := optional&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_SRC_FILES := \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(call all-java-files-under, src) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        src/com/android/settings/EventLogTags.logtags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_RESOURCE_DIR := &lt;span class=&quot;variable&quot;&gt;$(LOCAL_PATH)&lt;/span&gt;/res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PACKAGE_NAME := Settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_CERTIFICATE := platform&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PRIVILEGED_MODULE := true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PROGUARD_FLAG_FILES := proguard.flags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ifneq ($(INCREMENTAL_BUILDS),)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LOCAL_PROGUARD_ENABLED := disabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LOCAL_JACK_ENABLED := incremental&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include frameworks/opt/setupwizard/navigationbar/common.mk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include frameworks/opt/setupwizard/library/common.mk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include frameworks/base/packages/SettingsLib/common.mk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(BUILD_PACKAGE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Use the following include to make our test apk.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ifeq (,$(ONE_SHOT_MAKEFILE))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(call all-makefiles-under,$(LOCAL_PATH))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于一个模块定义的Android.mk文件而言，开头几乎固定是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LOCAL_PATH:= $(call my-dir)&lt;br&gt;include $(CLEAR_VARS)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一行调用my-dir函数来获取当前的路径LOCAL_PATH，my-dir在build/core/definitions.mk中定义&lt;br&gt;&lt;figure class=&quot;highlight makefile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;###########################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Retrieve the directory of the current makefile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Must be called before including any other makefile!!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;###########################################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Figure out where we are.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;define my-dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(strip \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(eval LOCAL_MODULE_MAKEFILE := $$(lastword $$(MAKEFILE_LIST))) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(if $(filter $(BUILD_SYSTEM)/% $(OUT_DIR)/%,$(LOCAL_MODULE_MAKEFILE)), \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(error my-dir must be called before including any other makefile.) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   , \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(patsubst %/,%,$(dir $(LOCAL_MODULE_MAKEFILE))) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endef&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Android中的各种模块，无论apk，可执行文件，或jar包等都可通过Build系统编译生成。这些模块的编译规则通过各个模块下的Android.mk来定义.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Android-mk分析&quot;
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Build" scheme="http://hesstudio.cn/tags/Build/"/>
    
  </entry>
  
  <entry>
    <title>android-recovery</title>
    <link href="http://hesstudio.cn/2016/06/30/android-recovery/"/>
    <id>http://hesstudio.cn/2016/06/30/android-recovery/</id>
    <published>2016-06-30T07:32:50.000Z</published>
    <updated>2016-08-06T13:42:56.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android之签名</title>
    <link href="http://hesstudio.cn/2016/06/29/android-sign/"/>
    <id>http://hesstudio.cn/2016/06/29/android-sign/</id>
    <published>2016-06-29T02:41:59.000Z</published>
    <updated>2016-08-06T13:42:56.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.mobibrw.com/2015/2657&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mobibrw.com/2015/2657&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.mobibrw.com/2015/2826&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mobibrw.com/2015/2826&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$ jarsigner -verbose -keystore debug.keystore -signedjar Test.apk Monster_TmsService.apk  androiddebugkey&lt;br&gt;$ keytool -list  -v -keystore debug.keystore -storepass android&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.mobibrw.com/2015/2657&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mobibrw.com/2015/2657&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.mob
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Sign" scheme="http://hesstudio.cn/tags/Sign/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu14.04 FTP服务器搭建</title>
    <link href="http://hesstudio.cn/2016/06/06/ftp/"/>
    <id>http://hesstudio.cn/2016/06/06/ftp/</id>
    <published>2016-06-06T08:14:12.000Z</published>
    <updated>2016-08-06T13:41:59.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;vsftpd 是“very secure FTP daemon”的缩写，它是一款在Linux发行版中最受推崇的FTP服务器程序，安全性是它的一个最大的特点.&lt;/p&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;安装： &lt;code&gt;sudo apt-get install vsftpd&lt;/code&gt;    &lt;/li&gt;
&lt;li&gt;创建FTP账户： &lt;code&gt;sudo useradd -g ftp -s /sbin/nologin -d /home/ftp_directory ftpuser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置账户密码： &lt;code&gt;sudo passwd ftpuser&lt;/code&gt;   &lt;/li&gt;
&lt;li&gt;重启服务： &lt;code&gt;sudo service vsftpd restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;备份&lt;br&gt;vsftpd的配置文件位于/etc/vsftpd.conf，修改之前先备份配置文件&lt;br&gt;&lt;code&gt;sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.bak&lt;/code&gt;    &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;目录限制&lt;br&gt;默认情况下，用户登陆FTP后，是可以切换到根目录以外的主机其他目录，为了加以限制，可做如下配置：&lt;br&gt;&lt;code&gt;chroot_list_enable=YES&lt;/code&gt;&lt;br&gt;&lt;code&gt;chroot_list_file=/etc/vsftpd.chroot_list&lt;/code&gt;&lt;br&gt;然后设置chroot_local_user，有以下二种设置&lt;br&gt;设置&lt;code&gt;chroot_local_user＝YES&lt;/code&gt;表示/etc/vsftpd.chroot_list文件中用户不能chroot，其他用户可以&lt;br&gt;设置&lt;code&gt;chroot_local_user=NO&lt;/code&gt;表示/etc/vsftpd.chroot_list中用户可以chroot，其他用户不行&lt;br&gt;创建vsftpd.chroot_list，写入需控制chroot的用户&lt;br&gt;&lt;code&gt;sudo touch /etc/vsftpd.chroot_list&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;写权限&lt;br&gt;&lt;code&gt;write_enable=YES&lt;/code&gt;&lt;br&gt;如果开启了chroot来控制用户路径，则用户不再具有该用户根目录的写的权限&lt;br&gt;需设置&lt;code&gt;allow_writeable_chroot=YES&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;530 Login incorrect&lt;br&gt;如果在登陆时返回530 Login incorrect.&lt;br&gt;修改&lt;br&gt;&lt;code&gt;pam_service_name=vsftpd&lt;/code&gt;&lt;br&gt;为&lt;br&gt;&lt;code&gt;pam_service_name=ftp&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;相关配置参数&lt;br&gt;（1）ftpd_banner=welcome to ftp service ：设置连接服务器后的欢迎信息&lt;br&gt;（2）idle_session_timeout=60 ：限制远程的客户机连接后，所建立的控制连接，在多长时间没有做任何的操作就会中断(秒)&lt;br&gt;（3）data_connection_timeout=120 ：设置客户机在进行数据传输时,设置空闲的数据中断时间&lt;br&gt;（4）accept_timeout=60 设置在多长时间后自动建立连接&lt;br&gt;（5）connect_timeout=60 设置数据连接的最大激活时间，多长时间断开，为别人所使用&lt;br&gt;（6）max_clients=200 指明服务器总的客户并发连接数为200&lt;br&gt;（7）max_per_ip=3 指明每个客户机的最大连接数为3&lt;br&gt;（8）local_max_rate=50000(50kbytes/sec) 本地用户最大传输速率限制&lt;br&gt;（9）anon_max_rate=30000匿名用户的最大传输速率限制&lt;br&gt;（10）pasv_min_port=端口&lt;br&gt;（11）pasv-max-prot=端口号 定义最大与最小端口，为0表示任意端口;为客户端连接指明端口&lt;br&gt;（12）listen_address=IP地址 设置ftp服务来监听的地址，客户端可以用哪个地址来连接&lt;br&gt;（13）listen_port=端口号 设置FTP工作的端口号，默认的为21&lt;br&gt;（14）chroot_local_user=YES 设置所有的本地用户可以chroot&lt;br&gt;（15）chroot_local_user=NO 设置指定用户能够chroot&lt;br&gt;（16）chroot_list_enable=YES&lt;br&gt;（17）chroot_list_file=/etc/vsftpd/chroot_list(只有/etc/vsftpd/chroot_list中的指定的用户才能执行 )&lt;br&gt;（18）local_root=path 无论哪个用户都能登录的用户，定义登录帐号的主目录, 若没有指定，则每一个用户则进入到个人用户主目录&lt;br&gt;（19）chroot_local_user=yes/no 是否锁定本地系统帐号用户主目录(所有);锁定后，用户只能访问用户的主目录/home/user,不能利用cd命令向上转;只能向下&lt;br&gt;（20）chroot_list_enable=yes/no 锁定指定文件中用户的主目录(部分),文件：/chroot_list_file=path 中指定;&lt;br&gt;（21）userlist_enable=YES/NO 是否加载用户列表文件&lt;br&gt;（22）userlist_deny=YES 表示上面所加载的用户是否允许拒绝登录&lt;br&gt;（23）userlist_file=/etc/vsftpd/user_list 列表文件   &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;vsftpd 是“very secure FTP daemon”的缩写，它是一款在Linux发行版中最受推崇的FTP服务器程序，安全性是它的
    
    </summary>
    
    
      <category term="FTP" scheme="http://hesstudio.cn/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>jenkins环境搭建</title>
    <link href="http://hesstudio.cn/2016/06/01/jenkins/"/>
    <id>http://hesstudio.cn/2016/06/01/jenkins/</id>
    <published>2016-06-01T06:22:04.000Z</published>
    <updated>2016-06-03T05:42:43.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;wget -q -O - http://pkg.jenkins-ci.org/debian-stable/jenkins-ci.org.key | sudo apt-key add -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sh -c &amp;#39;echo deb http://pkg.jenkins-ci.org/debian-stable binary/ &amp;gt; /etc/apt/sources.list.d/jenkins.list&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install jenkins&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;FAQ&quot;&gt;&lt;a href=&quot;#FAQ&quot; class=&quot;headerlink&quot; title=&quot;FAQ&quot;&gt;&lt;/a&gt;FAQ&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;jenkins账户&lt;br&gt;jenkins安装后,会创建一个名为jenkins的服务账号(可通过&lt;code&gt;cat /etc/passwd&lt;/code&gt;查看),该账号是没有home目录的,可通过&lt;code&gt;sudo su -s /bin/bash jenkins&lt;/code&gt;切换到该账户&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://jenkins.io/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jenkins官网&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;wget -q -O - http://pkg.jenkins-ci.org/debian-stable/jenki
    
    </summary>
    
    
      <category term="jenkins" scheme="http://hesstudio.cn/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>android_build-3</title>
    <link href="http://hesstudio.cn/2016/05/31/android-build-3/"/>
    <id>http://hesstudio.cn/2016/05/31/android-build-3/</id>
    <published>2016-05-31T02:28:54.000Z</published>
    <updated>2016-08-06T13:41:59.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;image&quot;&gt;&lt;a href=&quot;#image&quot; class=&quot;headerlink&quot; title=&quot;image&quot;&gt;&lt;/a&gt;image&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;boot.img &lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;image&quot;&gt;&lt;a href=&quot;#image&quot; class=&quot;headerlink&quot; title=&quot;image&quot;&gt;&lt;/a&gt;image&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;boot.img &lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux-sed</title>
    <link href="http://hesstudio.cn/2016/05/30/linux-sed/"/>
    <id>http://hesstudio.cn/2016/05/30/linux-sed/</id>
    <published>2016-05-30T06:04:18.000Z</published>
    <updated>2016-06-01T06:23:12.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;^ 匹配行开始，如：/^sed/匹配所有以sed开头的行。&lt;br&gt;$ 匹配行结束，如：/sed$/匹配所有以sed结尾的行。&lt;br&gt;. 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。&lt;br&gt;* 匹配0个或多个字符，如：/&lt;em&gt;sed/匹配所有模板是一个或多个空格后紧跟sed的行。&lt;br&gt;[] 匹配一个指定范围内的字符，如/[ss]ed/匹配sed和Sed。&lt;br&gt;[^] 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。&lt;br&gt;(..) 匹配子串，保存匹配的字符，如s/(love)able/\1rs，loveable被替换成lovers。&lt;br&gt;&amp;amp; 保存搜索字符用来替换其他字符，如s/love/&lt;strong&gt;&amp;amp;&lt;/strong&gt;/，love这成&lt;em&gt;*love&lt;/em&gt;&lt;/em&gt;。&lt;br&gt;\&amp;lt; 匹配单词的开始，如:/\ 匹配单词的结束，如/love&gt;/匹配包含以love结尾的单词的行。&lt;br&gt; x{m} 重复字符x，m次，如：/0{5}/匹配包含5个0的行。&lt;br&gt; x{m,} 重复字符x，至少m次，如：/0{5,}/匹配至少有5个0的行。&lt;br&gt;  x{m,n} 重复字符x，至少m次，不多于n次，如：/0{5,10}/匹配5~10个0的行。    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;来自: &lt;a href=&quot;http://man.linuxde.net/sed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://man.linuxde.net/sed&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;^ 匹配行开始，如：/^sed/匹配所有以sed开头的行。&lt;br&gt;$ 匹配行结束，如：/sed$/匹配所有以sed结尾的行。&lt;br&gt;. 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。&lt;br&gt;* 匹配0个或多个字符，如：
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android Build系统之envsetup.sh</title>
    <link href="http://hesstudio.cn/2016/05/24/android-build-2/"/>
    <id>http://hesstudio.cn/2016/05/24/android-build-2/</id>
    <published>2016-05-24T02:50:45.000Z</published>
    <updated>2016-08-06T13:41:59.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Android Build系统是比较大的模块,为了能快速了解整个模块的组织架构,后面采用从入口开始分析的方式,一步步深入分析Android的Build系统.在编译AOSP前,首先运行的是envsetup.sh脚本,所以下面就从envsetup.sh脚本开始分析.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;envsetup-sh的作用&quot;&gt;&lt;a href=&quot;#envsetup-sh的作用&quot; class=&quot;headerlink&quot; title=&quot;envsetup.sh的作用&quot;&gt;&lt;/a&gt;envsetup.sh的作用&lt;/h1&gt;&lt;p&gt;打开envsetup.sh脚本,可以看到该脚本定义了很多的shell命令,这些命令在envsetup.sh脚本执行后可以直接在shell环境中使用.忽略掉定义部分,envsetup.sh脚本实际执行的代码只有数行,如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 中间部分代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# add the default one here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_arm-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_arm64-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_mips-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_mips64-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_x86-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_x86_64-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 结尾部分代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ &amp;quot;x$SHELL&amp;quot; != &amp;quot;x/bin/bash&amp;quot; ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case `ps -o command -p $$` in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *bash*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            echo &amp;quot;WARNING: Only bash is supported, use of other shell would lead to erroneous results&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    esac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Execute the contents of any erroneous files we can find.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for f in `test -d device &amp;amp;&amp;amp; find -L device -maxdepth 4 -name &amp;apos;vendorsetup.sh&amp;apos; 2&amp;gt; /dev/null | sort` \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         `test -d vendor &amp;amp;&amp;amp; find -L vendor -maxdepth 4 -name &amp;apos;vendorsetup.sh&amp;apos; 2&amp;gt; /dev/null | sort`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;including $f&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    . $f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unset f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addcompletions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;中间部分有6条add_lunch_combo的调用,结尾部分首先会判断是否是bash环境,如果不是提示警告.接着查找device与vendor目录下的vendorsetup.sh脚本并执行.&lt;br&gt;先看add_lunch_combo的定义&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function add_lunch_combo()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    local new_combo=$1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    local c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for c in $&amp;#123;LUNCH_MENU_CHOICES[@]&amp;#125; ; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if [ &amp;quot;$new_combo&amp;quot; = &amp;quot;$c&amp;quot; ] ; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LUNCH_MENU_CHOICES=($&amp;#123;LUNCH_MENU_CHOICES[@]&amp;#125; $new_combo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到add_lunch_combo的作用就是将传递的$1参数加入到LUNCH_MENU_CHOICES数组中.&lt;br&gt;再看一下vendorsetup.sh的定义,以bullhead为例,device/lge/bullhead/vendorsetup.sh的内容如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;add_lunch_combo aosp_bullhead-userdebug&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以发现整个envsetup.sh执行过后,除了定义了一些shell函数,剩下的工作就是利用add_lunch_combo将传递给其的参数加入到全局数组LUNCH_MENU_CHOICES中,到底LUNCH_MENU_CHOICES有什么作用呢?我们可以在终端执行一下lunch命令,输出如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You’re building on Linux&lt;/p&gt;
&lt;p&gt;Lunch menu… pick a combo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. aosp_arm-eng
2. aosp_arm64-eng
3. aosp_mips-eng
4. aosp_mips64-eng
5. aosp_x86-eng
6. aosp_x86_64-eng
7. aosp_deb-userdebug
8. aosp_flo-userdebug
9. full_fugu-userdebug
10. aosp_fugu-userdebug
11. mini_emulator_arm64-userdebug
12. m_e_arm-userdebug
13. mini_emulator_mips-userdebug
14. mini_emulator_x86_64-userdebug
15. mini_emulator_x86-userdebug
16. aosp_flounder-userdebug
17. aosp_angler-userdebug
18. aosp_bullhead-userdebug
19. aosp_hammerhead-userdebug
20. aosp_hammerhead_fp-userdebug
21. aosp_shamu-userdebug
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Which would you like? [aosp_arm-eng]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上上面的这些选项就是通过add_lunch_combo加进去的.&lt;/p&gt;
&lt;p&gt;envsetup.sh脚本中定义的很多shell命令,一些常用的如下.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;lunch&lt;/td&gt;
&lt;td&gt;lunch &lt;product_name&gt;&lt;build_variant&gt; 指定当前编译产品&lt;/build_variant&gt;&lt;/product_name&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下面分析以下lunch命令的功能:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function lunch()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    local answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ &amp;quot;$1&amp;quot; ] ; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        answer=$1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print_lunch_menu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo -n &amp;quot;Which would you like? [aosp_arm-eng] &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        read answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    local selection=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 如果lunch后没跟参数,默认aosp_arm-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ -z &amp;quot;$answer&amp;quot; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selection=aosp_arm-eng&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif (echo -n $answer | grep -q -e &amp;quot;^[0-9][0-9]*$&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if [ $answer -le $&amp;#123;#LUNCH_MENU_CHOICES[@]&amp;#125; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            selection=$&amp;#123;LUNCH_MENU_CHOICES[$(($answer-1))]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif (echo -n $answer | grep -q -e &amp;quot;^[^\-][^\-]*-[^\-][^\-]*$&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selection=$answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ -z &amp;quot;$selection&amp;quot; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;Invalid lunch combo: $answer&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    export TARGET_BUILD_APPS=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 变量selection &amp;quot;-&amp;quot;分割的前部分赋值product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    local product=$(echo -n $selection | sed -e &amp;quot;s/-.*$//&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_product $product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ $? -ne 0 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;** Don&amp;apos;t have a product spec for: &amp;apos;$product&amp;apos;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;** Do you have the right repo manifest?&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        product=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 变量selection &amp;quot;-&amp;quot;分割的后部分赋值variant&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    local variant=$(echo -n $selection | sed -e &amp;quot;s/^[^\-]*-//&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_variant $variant&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ $? -ne 0 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;** Invalid variant: &amp;apos;$variant&amp;apos;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;** Must be one of $&amp;#123;VARIANT_CHOICES[@]&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        variant=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if [ -z &amp;quot;$product&amp;quot; -o -z &amp;quot;$variant&amp;quot; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    export TARGET_PRODUCT=$product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    export TARGET_BUILD_VARIANT=$variant&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    export TARGET_BUILD_TYPE=release&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 设置更多环境变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set_stuff_for_environment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 打印设置的环境变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printconfig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;lunch aosp_bullhead-userdebug执行完毕后输出如下:   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PLATFORM_VERSION_CODENAME=REL&lt;br&gt;PLATFORM_VERSION=6.0.1&lt;br&gt;TARGET_PRODUCT=aosp_bullhead&lt;br&gt;TARGET_BUILD_VARIANT=userdebug&lt;br&gt;TARGET_BUILD_TYPE=release&lt;br&gt;TARGET_BUILD_APPS=&lt;br&gt;TARGET_ARCH=arm64&lt;br&gt;TARGET_ARCH_VARIANT=armv8-a&lt;br&gt;TARGET_CPU_VARIANT=cortex-a53&lt;br&gt;TARGET_2ND_ARCH=arm&lt;br&gt;TARGET_2ND_ARCH_VARIANT=armv7-a-neon&lt;br&gt;TARGET_2ND_CPU_VARIANT=cortex-a7&lt;br&gt;HOST_ARCH=x86_64&lt;br&gt;HOST_OS=linux&lt;br&gt;HOST_OS_EXTRA=Linux-4.2.0-27-generic-x86_64-with-Ubuntu-14.04-trusty&lt;br&gt;HOST_BUILD_TYPE=release&lt;br&gt;BUILD_ID=MHC19J&lt;br&gt;OUT_DIR=out   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;环境变量&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PLATFORM_VERSION_CODENAME&lt;/td&gt;
&lt;td&gt;代表平台版本名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PLATFORM_VERSION&lt;/td&gt;
&lt;td&gt;表示平台版本号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_PRODUCT&lt;/td&gt;
&lt;td&gt;表示产品名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_BUILD_VARIANT&lt;/td&gt;
&lt;td&gt;表示产品编译类型,可以是eng,userdebug,debug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_BUILD_TYPE&lt;/td&gt;
&lt;td&gt;编译类型,可以是release或者debug,当为debug时,编译时会加入调试信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_BUILD_APPS&lt;/td&gt;
&lt;td&gt;编译android时为空,编译模块是为模块的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_ARCH&lt;/td&gt;
&lt;td&gt;目标cpu架构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_ARCH_VARIANT&lt;/td&gt;
&lt;td&gt;目标cpu架构版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_CPU_VARIANT&lt;/td&gt;
&lt;td&gt;目标cpu代号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_2ND_ARCH&lt;/td&gt;
&lt;td&gt;目标第二cpu架构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_2ND_ARCH_VARIANT&lt;/td&gt;
&lt;td&gt;目标第二cpu架构版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TARGET_2ND_CPU_VARIANT&lt;/td&gt;
&lt;td&gt;目标第二代cpu代号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HOST_ARCH&lt;/td&gt;
&lt;td&gt;编译平台架构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HOST_OS&lt;/td&gt;
&lt;td&gt;编译平台操作系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HOST_OS_EXTRA&lt;/td&gt;
&lt;td&gt;编译平台额外信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HOST_BUILD_TYPE&lt;/td&gt;
&lt;td&gt;编译平台编译类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BUILD_ID&lt;/td&gt;
&lt;td&gt;编译ID,会出现编译版本信息中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OUT_DIR&lt;/td&gt;
&lt;td&gt;编译输出目录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Android Build系统是比较大的模块,为了能快速了解整个模块的组织架构,后面采用从入口开始分析的方式,一步步深入分析Android的Build系统.在编译AOSP前,首先运行的是envsetup.sh脚本,所以下面就从envset
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Build" scheme="http://hesstudio.cn/tags/Build/"/>
    
  </entry>
  
  <entry>
    <title>git操作总结</title>
    <link href="http://hesstudio.cn/2016/05/23/git-operate/"/>
    <id>http://hesstudio.cn/2016/05/23/git-operate/</id>
    <published>2016-05-23T08:58:56.000Z</published>
    <updated>2016-05-27T06:23:59.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;h1 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;配置&lt;br&gt;Usage: git config –global|–system|–local|–list&lt;br&gt;&lt;code&gt;$ git config --global user.name [username]&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ git config --global user.email [email]&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ git config --global color.ui true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初始化版本库&lt;br&gt;&lt;code&gt;$ git init&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;暂存&lt;br&gt;&lt;code&gt;$ git add .&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ git add -u&lt;/code&gt;   暂存已跟踪文件&lt;br&gt;&lt;code&gt;$ git add -A&lt;/code&gt;   跟踪文件并暂存&lt;br&gt;&lt;code&gt;$ git add -p&lt;/code&gt;   选择性暂存文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态查看&lt;br&gt;&lt;code&gt;$ git status&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ git status -s&lt;/code&gt; 精简显示   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;比较&lt;br&gt;工作区与暂存区比较:&lt;br&gt;&lt;code&gt;$ git diff&lt;/code&gt;&lt;br&gt;暂存区与HEAD(版本库当前分支)比较:&lt;br&gt;&lt;code&gt;$ git diff --staged&lt;/code&gt;&lt;br&gt;工作,暂存区(未提交修改)与HEAD(版本库当前分支)比较:&lt;br&gt;&lt;code&gt;$ git diff HEAD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;撤销&lt;br&gt;撤销工作区修改:&lt;br&gt;&lt;code&gt;$ git checkout .&lt;/code&gt;&lt;br&gt;该命令会将暂存区全部文件或指定文件替换工作区对应文件&lt;br&gt;&lt;code&gt;$ git checkout -- &amp;lt;file&amp;gt;&lt;/code&gt;   &lt;/p&gt;
&lt;p&gt;撤销工作区,暂存区修改:&lt;br&gt;&lt;code&gt;$ git checkout HEAD .&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ git checkout HEAD &amp;lt;file&amp;gt;&lt;/code&gt;&lt;br&gt;该命令会将HEAD所指向的master分支全部或指定文件替换到工作区,暂存区,&lt;/p&gt;
&lt;p&gt;暂存区域撤销:&lt;br&gt;&lt;code&gt;$ git reset HEAD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移除&lt;br&gt;暂存区移除:&lt;br&gt;&lt;code&gt;$ git rm --cached &amp;lt;file&amp;gt;&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;日志查看&lt;br&gt;&lt;code&gt;git log&lt;/code&gt;   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;修改远程仓库url:&lt;br&gt;&lt;code&gt;git remote set-url origin new-url&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;配置&lt;br&gt;Usage: git config –global|–system|–local|–
    
    </summary>
    
    
      <category term="Git" scheme="http://hesstudio.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Android Build系统概述</title>
    <link href="http://hesstudio.cn/2016/05/23/android-build-1/"/>
    <id>http://hesstudio.cn/2016/05/23/android-build-1/</id>
    <published>2016-05-23T05:22:51.000Z</published>
    <updated>2016-08-06T13:41:59.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Android的Build系统是基于GNU make,shell,python构建的一套编译环境.通过该编译环境,不仅可以完成对目标系统的二进制文件,APK应用程序编译,链接,打包等工作,还可以生成目标文件系统镜像,各种配置文件等.Build系统维护着各模块间的依赖关系,以确保某个模块修改能引起所依赖的模块重新编译.另外Build系统还支持多架构(arm,mips,x86),多语言(asm,c/C++,java)和多目标(同时支持多个产品).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;源码编译&quot;&gt;&lt;a href=&quot;#源码编译&quot; class=&quot;headerlink&quot; title=&quot;源码编译&quot;&gt;&lt;/a&gt;源码编译&lt;/h1&gt;&lt;p&gt;在完整获取AOSP源码后,可按以下流程来进行源码的编译.&lt;br&gt;1.初始化编译环境:&lt;br&gt;&lt;code&gt;$ source build/envsetup.sh&lt;/code&gt;&lt;br&gt;2.选择编译目标:&lt;br&gt;&lt;code&gt;$ lunch aosp_arm-eng&lt;/code&gt;&lt;br&gt;目标有三种编译类型可选,分别是user,userdebug,eng  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Buildtype&lt;/th&gt;
&lt;th&gt;Use&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;user&lt;/td&gt;
&lt;td&gt;limited access; suited for production&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;userdebug&lt;/td&gt;
&lt;td&gt;like “user” but with root access and debuggability; preferred for debugging&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eng&lt;/td&gt;
&lt;td&gt;development configuration with additional debugging tools&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;3.编译代码:&lt;br&gt;&lt;code&gt;$ make -j8&lt;/code&gt;&lt;br&gt;所有的编译目标都在out目录下生成.&lt;/p&gt;
&lt;h1 id=&quot;Build系统框架&quot;&gt;&lt;a href=&quot;#Build系统框架&quot; class=&quot;headerlink&quot; title=&quot;Build系统框架&quot;&gt;&lt;/a&gt;Build系统框架&lt;/h1&gt;&lt;p&gt;Build系统的主要逻辑都集中在make文件中,同时依靠脚本辅助.从大的方面讲,Android Build系统可以分为一下3大块.&lt;br&gt;1.Build核心文件:&lt;br&gt;位于build/core下的文件是Android Build系统的框架与核心,其他device,module的make都依赖&lt;br&gt;2.产品配置文件:&lt;br&gt;产品相关文件主要位于源码的device,vendor目录下,device下主要存放产品配置文件,verdor下主要存放一些硬件的HAL库.&lt;br&gt;3.模块make文件:&lt;br&gt;整个系统中，包含了大量的模块，每个模块都有一个Android.mk文件.Build系统会在整个源码树中扫描名称为“Android.mk”的文件并根据其中的内容来执行模块的编译&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/software/make/manual/html_node/index.html?cm_mc_uid=03725177062214639675956&amp;amp;cm_mc_sid_50200000=1463985980&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GNU make&lt;/a&gt;&lt;br&gt;2.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Android的Build系统是基于GNU make,shell,python构建的一套编译环境.通过该编译环境,不仅可以完成对目标系统的二进制文件,APK应用程序编译,链接,打包等工作,还可以生成目标文件系统镜像,各种配置文件等.Bui
    
    </summary>
    
    
      <category term="Android" scheme="http://hesstudio.cn/tags/Android/"/>
    
      <category term="Build" scheme="http://hesstudio.cn/tags/Build/"/>
    
  </entry>
  
</feed>
